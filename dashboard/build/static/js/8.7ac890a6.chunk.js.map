{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/icons/esm/Check.js","../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","../node_modules/@material-ui/icons/esm/ErrorOutline.js","pages/workflows/JobListing.tsx"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","Divider","_props$absolute","absolute","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","vertical","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","CardContent","padding","paddingBottom","createSvgIcon","createElement","d","LinearProgress","_props$color","color","value","valueBuffer","useTheme","rootProps","inlineStyles","bar1","bar2","Math","round","transform","direction","concat","process","_transform","capitalize","determinate","indeterminate","buffer","query","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","style","bar2Indeterminate","bar2Buffer","getColor","type","lighten","darken","backgroundPrimary","primary","main","backgroundSecondary","secondary","colorPrimary","colorSecondary","marginTop","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","styled","MuiCard","MuiDivider","Grid","MuiGrid","Button","MuiButton","JobListing","state","dataFetched","jobs","fbSubs","stackTrace","showException","pollingTrigger","bind","hideDialog","refreshJobListing","this","startPolling","event","job","preventDefault","setState","setInterval","a","fetch","context","apiUrl","response","json","data","progress","Box","mt","status","CircularProgress","Check","green","fontSize","ErrorOutline","red","workflowType","Typography","gutterBottom","url","urlArray","split","length","workflowId","workflowName","outputSummary","createdAt","lastTaskEnd","outputLinks","duration","date","map","u","Link","href","target","displayFile","exceptionMsg","exception","substring","onClick","outputMetadata","initialCopies","table","display","mr","Chip","key","label","size","copySummary","summary","deltaCopies","Fragment","title","my","Dialog","open","onClose","maxWidth","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","text","index","DialogActions","mb","uuid","justify","container","item","xs","statusIcon","workflowInfo","fromNow","Date","progressBar","results","contextType","RedacticsContext"],"mappings":"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","file":"static/js/8.7ac890a6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0px -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0px -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: you need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: you need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import React from 'react';\nimport styled from 'styled-components';\n\nimport Helmet from 'react-helmet';\nimport Moment from 'react-moment';\n\nimport { red, green } from \"@material-ui/core/colors\";\n\nimport {\n  Divider as MuiDivider,\n  Grid as MuiGrid,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button as MuiButton,\n  Box,\n  Chip,\n  Card as MuiCard,\n  CardContent,\n  CircularProgress,\n  LinearProgress,\n  Link,\n} from '@material-ui/core';\n\nimport {\n  Check as CheckIcon,\n  ErrorOutline as ErrorOutlineIcon,\n} from '@material-ui/icons';\n\nimport { spacing } from '@material-ui/system';\nimport {\n  WorkflowJob,\n} from '../../types/redactics';\nimport RedacticsContext from '../../contexts/RedacticsContext';\n\nconst Card = styled(MuiCard)(spacing);\n\nconst Divider = styled(MuiDivider)(spacing);\n\nconst Grid = styled(MuiGrid)(spacing);\n\nconst Button = styled(MuiButton)(spacing);\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\ninterface IProps {}\n\ninterface IState {\n  // TODO: come up with WF Jobs typescript type\n  jobs: any[];\n  fbSubs: string[];\n  stackTrace: string;\n  showException: boolean;\n  dataFetched: boolean;\n  pollingTrigger: boolean;\n}\n\nclass JobListing extends React.Component<IProps, IState> {\n  static contextType = RedacticsContext;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      dataFetched: false,\n      jobs: [],\n      fbSubs: [],\n      stackTrace: \"\",\n      showException: false,\n      pollingTrigger: false,\n    };\n\n    this.showException = this.showException.bind(this);\n    this.hideDialog = this.hideDialog.bind(this);\n    this.refreshJobListing = this.refreshJobListing.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshJobListing();\n    this.startPolling();\n  }\n\n  showException(event:any, job:WorkflowJob) {\n    event.preventDefault();\n\n    this.setState({\n      showException: true,\n      stackTrace: job.stackTrace,\n    })\n  }\n\n  hideDialog() {\n    this.setState({\n      showException: false,\n    })\n  }\n\n  startPolling() {\n    setInterval(() => {\n      if (!this.state.pollingTrigger) {\n        this.refreshJobListing();\n      }\n    }, 5000);\n  }\n\n  async refreshJobListing() {\n    try {\n      this.setState({\n        pollingTrigger: true\n      });\n      const response = await fetch(`${this.context.apiUrl}/workflow/jobs`);\n\n      const data = await response.json();\n\n      this.setState({\n        jobs: data,\n        dataFetched: true,\n        pollingTrigger: false,\n      });\n    } catch (err) {\n    // console.log('CATCH ERR', error);\n    }\n  }\n\n  progressBar(job:WorkflowJob) {\n    return (job.progress && job.progress < 100) ? (\n      <Box mt={4}>\n        <LinearProgress\n          variant=\"determinate\"\n          value={job.progress}\n        />\n      </Box>\n    ) : null;\n  }\n\n  statusIcon(job:WorkflowJob) {\n    switch (job.status) {\n      case 'inProgress':\n      case 'queued':\n        return (\n          <CircularProgress />\n        );\n\n      case 'completed':\n        return (\n          <CheckIcon style={{ color: green[500], fontSize: 50 }} />\n        )\n\n      case 'error':\n        return (\n          <ErrorOutlineIcon style={{ color: red[500], fontSize: 50 }} />\n        )\n\n      default:\n      break;\n    }\n  }\n\n  workflowType(job:WorkflowJob) {\n    switch (job.workflowType) {\n      case 'ERL':\n        return (\n          <Typography variant=\"h5\" gutterBottom>\n            ERL (Extract, Redact, Load)\n          </Typography>\n        )\n\n      case 'sampletable-athletes':\n        return (\n          <Typography variant=\"h5\" gutterBottom>\n            Install Sample Table: Athletes\n          </Typography>\n        )\n\n      case 'sampletable-marketing_campaign':\n        return (\n          <Typography variant=\"h5\" gutterBottom>\n            Install Sample Table: Marketing Campaign\n          </Typography>\n        )\n\n      case 'mockDatabaseMigration':\n        return (\n          <Typography variant=\"h5\" gutterBottom>\n            Database Clone for Migration Dry-run\n          </Typography>\n        )\n\n      default:\n      break;\n    } \n  }\n\n  displayFile(url:string) {\n    const urlArray = url.split('/');\n    return urlArray[(urlArray.length - 1)];\n  }\n\n  workflowInfo(job:WorkflowJob) {\n    return (job.workflowId) ? (\n      <Box>\n        Workflow: {job.workflowName} (<code>{job.workflowId}</code>)\n      </Box>\n    ) : null;\n  }\n\n  results(job:WorkflowJob) {\n    let outputSummary:any = null;\n    let outputInfo:any = null;\n    if (job.status === \"completed\" && job.createdAt !== job.lastTaskEnd) {\n      outputSummary = job.outputLinks ? (\n        <Box>\n          <Box>\n            <b>Completed in <Moment duration={job.createdAt} date={job.lastTaskEnd} /></b>. {job.outputSummary || outputInfo}\n          </Box>\n          <Box mt={2}>\n            <ul>\n              {job.outputLinks.map((u:string) => (\n                <li><Link href={u} target=\"_blank\">{this.displayFile(u)}</Link></li>\n              ))}\n            </ul>\n          </Box>\n        </Box>\n      ) : (\n        <Box>\n          <b>Completed in <Moment duration={job.createdAt} date={job.lastTaskEnd} /></b>. {job.outputSummary || outputInfo}\n        </Box>\n      )\n    }\n    else if (job.status === \"error\") {\n      const exceptionMsg = (job.exception && job.exception.length > 150) ? job.exception.substring(0,149) + \"...\" : job.exception;\n      outputSummary = (\n        <Box>\n          <Link href=\"#\" onClick={(event) => this.showException(event, job)}><b>{exceptionMsg}</b></Link>\n        </Box>\n      )\n    }\n\n    return (outputSummary) ? (\n      <Box mt={4}>\n        {outputSummary}\n      </Box>\n    ) : null;\n  }\n\n  initialCopies(job:WorkflowJob) {\n    if (job.outputMetadata && job.outputMetadata.initialCopies && job.outputMetadata.initialCopies.length) {\n      return (\n        <Box mt={4}>\n          <b>Full Copied Tables</b>\n\n          <Box mt={4}>\n            {job.outputMetadata.initialCopies.map((table:string) => {\n              return (\n                <Box display=\"inline\" mr={1}>\n                  <Chip\n                    key={table}\n                    label={table}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n              )\n            })}\n          </Box>\n        </Box>\n      )\n    }\n  }\n\n  copySummary(job:WorkflowJob) {\n    if (job.outputMetadata && job.outputMetadata.copySummary && job.outputMetadata.copySummary.length) {\n      return (\n        <Box mt={4}>\n          <b>Copy Summary</b>\n\n          <Box mt={4}>\n            <ul>\n              {job.outputMetadata.copySummary.map((summary:string) => {\n                return (\n                  <li>{summary}</li>\n                )\n              })}\n            </ul>\n          </Box>\n        </Box>\n      )\n    }\n  }\n\n  deltaCopies(job:WorkflowJob) {\n    if (job.outputMetadata && job.outputMetadata.deltaCopies && job.outputMetadata.deltaCopies.length) {\n      return (\n        <Box mt={4}>\n          <b>Delta Copied Tables</b>\n      \n          <Box mt={4}>\n            {job.outputMetadata.deltaCopies.map((table:string) => {\n              return (\n                <Box display=\"inline\" mr={1}>\n                  <Chip\n                    key={table}\n                    label={table}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n              )\n            })}\n          </Box>\n        </Box>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Helmet title=\"Workflow Jobs\" />\n\n        <Typography variant=\"h1\" gutterBottom display=\"inline\">\n          Workflow Jobs\n        </Typography>\n\n        <Divider my={6} />\n\n        <Dialog\n          open={this.state.showException}\n          onClose={this.hideDialog}\n          maxWidth=\"lg\"\n          aria-labelledby=\"dialog-title\"\n          aria-describedby=\"dialog-description\"\n        >\n          <DialogTitle id=\"dialog-title\">Error Stacktrace</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"dialog-description\">\n              {\n                this.state.stackTrace.split('\\n').map((text:string, index:number) => <React.Fragment key={`${text}-${index}`}>\n                    {text}\n                    <br />\n                  </React.Fragment>)\n              }\n            </DialogContentText>\n\n            <DialogActions>\n              <Button color=\"primary\" onClick={this.hideDialog}>\n                Close\n              </Button>\n            </DialogActions>\n          </DialogContent>\n        </Dialog>\n\n        {this.state.jobs.map((job:WorkflowJob) => {\n          return (\n            <Box mb={4} key={job.uuid}>\n              <Card>\n                <CardContent>\n                  <Grid\n                    justify=\"space-between\"\n                    container\n                    spacing={10}\n                  >\n                    <Grid item xs={1}>\n                      {this.statusIcon(job)}\n                    </Grid>\n\n                    <Grid item xs={11}>\n                      {this.workflowType(job)}\n                      {this.workflowInfo(job)}\n                      Created: <Moment fromNow>{new Date(job.createdAt)}</Moment>\n                      {this.progressBar(job)}\n                      {this.results(job)}\n                      {this.deltaCopies(job)}\n                      {this.initialCopies(job)}\n                      {this.copySummary(job)}\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Box>\n          )\n        })}\n\n        {(this.state.dataFetched && (!this.state.jobs || !this.state.jobs.length)) ? (\n          <Card mt={8}>\n            <CardContent>\n              You have no workflow jobs yet. Jobs will appear here after the time the job has been scheduled for, or when run manually.\n            </CardContent>\n          </Card>\n        ) : null}\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default JobListing;\n"],"sourceRoot":""}