{"version":3,"sources":["../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanelContext.js","../node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js","../node_modules/react-feather/dist/icons/download.js","pages/developers/Main.tsx"],"names":["ExpansionPanelContext","React","ExpansionPanelSummary","props","ref","children","classes","className","expandIcon","IconButtonProps","onBlur","onClick","onFocusVisible","other","_objectWithoutProperties","_React$useState","focusedState","setFocusedState","_React$useContext","_React$useContext$dis","disabled","expanded","toggle","ButtonBase","_extends","focusRipple","disableRipple","component","clsx","root","focused","event","content","IconButton","edge","tabIndex","role","withStyles","theme","transition","duration","transitions","shortest","display","minHeight","create","padding","spacing","cursor","backgroundColor","palette","grey","opacity","flexGrow","margin","transform","name","ExpansionPanel","arr","childrenProp","_props$defaultExpande","defaultExpanded","_props$disabled","expandedProp","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","_useControlled","useControlled","controlled","default","state","_useControlled2","_slicedToArray","setExpandedState","handleChange","_React$Children$toArr","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","Paper","rounded","Provider","value","in","timeout","id","position","left","top","right","height","divider","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Card","_props$raised","raised","elevation","overflow","Divider","_props$absolute","absolute","_props$component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","undefined","_props$variant","variant","vertical","border","flexShrink","bottom","width","inset","marginLeft","fade","middle","marginRight","alignSelf","CardContent","paddingBottom","Link","_props$color","color","onFocus","TypographyClasses","_props$underline","underline","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","concat","capitalize","button","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","userSelect","verticalAlign","borderStyle","ExpansionPanelDetails","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Download","size","otherProps","createElement","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","defaultProps","styled","MuiCard","MuiDivider","MuiExpansionPanelDetails","Button","MuiButton","CLI","download","bind","window","location","href","context","cliUrl","Fragment","title","gutterBottom","my","Box","mt","mb","cliVersion","rel","ExpandMore","panel","localStorage","setItem","contextType","RedacticsContext","withTheme"],"mappings":"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","file":"static/js/8.77e47459.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar ExpansionPanelContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ExpansionPanelContext.displayName = 'ExpansionPanelContext';\n}\n\nexport default ExpansionPanelContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from '../ExpansionPanel/ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 3),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        opacity: 0.38\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar ExpansionPanelSummary = React.forwardRef(function ExpansionPanelSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(ExpansionPanelContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelSummary.propTypes = {\n  /**\n   * The content of the expansion panel summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelSummary'\n})(ExpansionPanelSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar ExpansionPanel = React.forwardRef(function ExpansionPanel(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'ExpansionPanel',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: the ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (!React.isValidElement(summary)) {\n      return new Error('Material-UI: expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: '8px 24px 24px'\n  }\n};\nvar ExpansionPanelDetails = React.forwardRef(function ExpansionPanelDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Download = function Download(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"7 10 12 15 17 10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"15\",\n    x2: \"12\",\n    y2: \"3\"\n  }));\n};\n\nDownload.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nDownload.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default Download;","import React from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Helmet from 'react-helmet';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  Divider as MuiDivider,\n  Typography,\n  Button as MuiButton,\n  Box,\n  CardContent,\n  Card as MuiCard,\n  Link,\n  ExpansionPanel,\n  ExpansionPanelDetails as MuiExpansionPanelDetails,\n  ExpansionPanelSummary,\n} from '@material-ui/core';\n\nimport {\n  ExpandMore as ExpandMoreIcon,\n} from '@material-ui/icons';\n\nimport {\n  Download as DownloadIcon,\n} from 'react-feather';\n\nimport { spacing } from '@material-ui/system';\nimport RedacticsContext from '../../contexts/RedacticsContext';\n\nconst Card = styled(MuiCard)(spacing);\n\nconst Divider = styled(MuiDivider)(spacing);\n\nconst ExpansionPanelDetails = withStyles({\n  root: {\n    display: 'block',\n  },\n})(MuiExpansionPanelDetails);\n\nconst Button = styled(MuiButton)(spacing);\n\nclass CLI extends React.Component {\n  static contextType = RedacticsContext;\n\n  constructor(props: any) {\n    super(props);\n\n    this.download = this.download.bind(this);\n  }\n\n  download() {\n    window.location.href = this.context.cliUrl;\n  }\n\n  static expansionPanelChange(panel: string) {\n    if (panel === 'developerDatasetDownload') {\n      // save state that developer download info has been read\n      localStorage.setItem('developerDatasetDownload', 'true');\n    }\n  }\n\n  /* eslint-disable max-len */\n\n  render() {\n    return (\n      <React.Fragment>\n        <Helmet title=\"Developers\" />\n\n        <Typography variant=\"h1\" gutterBottom display=\"inline\">\n          Developers\n        </Typography>\n\n        <Divider my={6} />\n\n        <Box mt={4}>\n          <Typography variant=\"body1\" gutterBottom>\n            Information about the Redactics SMART Agent CLI and sample database tables that can be installed for testing can be found below.\n          </Typography>\n        </Box>\n\n        <Card mb={1} mt={8}>\n          <CardContent>\n            <Typography variant=\"h3\" gutterBottom>\n              Redactics SMART Agent CLI\n            </Typography>\n\n            <Box mt={8}>\n              <p>\n                Click on the button below to download the Redactics SMART Agent CLI. The Redactics CLI is a shell script that provides the following functionality:\n              </p>\n            </Box>\n\n            <ul>\n              <li>List and download of database exports generated by Redactics</li>\n              <li>Manual triggering of Redactics jobs</li>\n              <li>Redactics data repository management and dataset installation</li>\n              <li>Initiation of PII scanning job (supports the <Link href=\"/usecases/piiscanner\">Data Privacy: PII Scanner</Link> feature)</li>\n              <li>Sample table installation</li>\n              <li>Output of job status</li>\n              <li>Troubleshooting/diagnostics</li>\n            </ul>\n\n            <Box mt={4} mb={8}>\n              <Button color=\"primary\" onClick={this.download} variant=\"contained\" size=\"large\">\n                <DownloadIcon />&nbsp;Download From Github (version {this.context.cliVersion})\n              </Button>\n              <Box mt={2}>\n                The source code can be found within our <Link href=\"https://github.com/Redactics/cli\" target=\"_blank\">Github repo</Link>.\n              </Box>\n            </Box>\n\n            <Typography variant=\"h5\" gutterBottom>\n              Install Instructions\n            </Typography>\n\n            <ol>\n              <li>Extract .zip file (this will extract a single shell script file)</li>\n              <li>Assure that this shell script is executable (e.g. chmod +x /path/to/redactics.sh)</li>\n              <li>(Optional) move to a directory of your choice accessible by your shell</li>\n            </ol>\n\n            <Typography variant=\"h5\" gutterBottom>\n              Usage\n            </Typography>\n\n            <p>\n              Enter <code>/path/to/redactics.sh</code> to display usage instructions\n            </p>\n\n            <Typography variant=\"h5\" gutterBottom>\n              Requirements\n            </Typography>\n\n            <p>\n              This script requires that you have the Kubernetes <Link target=\"_blank\" rel=\"noreferrer\" href=\"https://kubernetes.io/docs/tasks/tools/\">kubectl</Link> tool available (authenticated to your cluster), and <Link target=\"_blank\" rel=\"noreferrer\" href=\"https://helm.sh/docs/intro/install\">Helm</Link> both accessible by your shell.\n            </p>\n\n          </CardContent>\n        </Card>\n\n        <Box mt={8}>\n          <Typography variant=\"h3\" gutterBottom>\n            Other Helpful Info/FAQs\n          </Typography>\n        </Box>\n\n        <Box mt={4}>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography>Sample Table Installation Instructions</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Box>\n                <p>\n                  There are two sample tables that can be installed by the CLI, one containing a listing of olympic athletes that participated in the 2020 Tokyo olympics, and one containing sample demographic information for a marketing campaign - the schema for both is provided below. These tables can be installed with the following commands, where <code>[database ID]</code> is the ID of your database found at the top of your <Link href=\"/databases\">database configurations</Link> and <code>[sample table]</code> is one of <code>olympics</code> or <code>marketing_campaign</code>. CSVs and full SQL schema for these datasets can also be found in our <Link href=\"https://github.com/Redactics/redactics-sampledatasets\" target=\"_blank\" rel=\"noreferrer\">Github repo</Link>.\n                </p>\n\n                <Box mt={4}>\n                  <code>redactics install-sample-table [database ID] [sample table]</code>\n                </Box>\n\n                <Box mt={8}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Olympics Table Schema\n                  </Typography>\n\n                  <ul>\n                    <li><b>id</b>: primary key (PostgreSQL numeric sequence)</li>\n                    <li><b>name</b>: athlete name (varchar)</li>\n                    <li><b>noc</b>: national olympic commitee (varchar)</li>\n                    <li><b>discipline</b>: participation sport (varchar)</li>\n                    <li><b>email</b>: a made up email address for this individual in the style of <code>firstnamelastname@olympics.com</code> (PII - varchar)</li>\n                  </ul>\n                </Box>\n\n                <Box mt={8}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Marketing Campaign Schema\n                  </Typography>\n\n                  <ul>\n                    <li><b>id</b>: primary key (preset numeric int4 ID)</li>\n                    <li><b>first_name</b>: (varchar)</li>\n                    <li><b>last_name</b>: (varchar)</li>\n                    <li><b>email</b>: a made up email address for this individual in the style of <code>firstnamelastname@gmail.com</code> (PII - varchar)</li>\n                    <li><b>phone</b>: a made up phone number (PII - varchar)</li>\n                    <li><b>last_login_ip</b>: a made up IP address (PII - varchar)</li>\n                    <li><b>year_birth</b>: (int2)</li>\n                    <li><b>education</b>: highest level of education obtained (varchar)</li>\n                    <li><b>marital_status</b>: (varchar)</li>\n                    <li><b>income</b>: (float4)</li>\n                    <li><b>kidhome</b>: number of kids in the home (int2)</li>\n                    <li><b>teenhome</b>: number of teenagers in the home (int2)</li>\n                    <li><b>dt_customer</b>: date of customer&apos;s enrollment with the company (varchar)</li>\n                    <li><b>recency</b>: number of days since customer&apos;s last purchase (int2)</li>\n                    <li><b>mntwines</b>: amount spent on wine (float4)</li>\n                    <li><b>mntfruits</b>: amount spent on fruit (float4)</li>\n                    <li><b>mntmeatproducts</b>: amount spent on meat products (float4)</li>\n                    <li><b>mntfishproducts</b>: amount spent on fish products (float4)</li>\n                    <li><b>mntsweetproducts</b>: amount spent on sweet products (float4)</li>\n                    <li><b>mntgoldprods</b>: amount spent on gold products (float4)</li>\n                    <li><b>numdealspurchases</b>: number of purchases on limited time deals (int2)</li>\n                    <li><b>numwebpurchases</b>: number of purchases made via the website (int2)</li>\n                    <li><b>numcatalogpurchases</b>: number of purchases made via the store catalog (int2)</li>\n                    <li><b>numstorepurchases</b>: number of visits to physical store locations (int2)</li>\n                    <li><b>numwebvisitsmonth</b>: number of monthly visits to the website (int2)</li>\n                    <li><b>acceptedcmp1</b>: campaign 1 website hits (int2)</li>\n                    <li><b>acceptedcmp2</b>: campaign 2 website hits (int2)</li>\n                    <li><b>acceptedcmp3</b>: campaign 3 website hits (int2)</li>\n                    <li><b>acceptedcmp4</b>: campaign 4 website hits (int2)</li>\n                    <li><b>acceptedcmp5</b>: campaign 5 website hits (int2)</li>\n                    <li><b>complain</b>: number of complaints (int2)</li>\n                    <li><b>z_costcontact</b>: cost to target individual (int2)</li>\n                    <li><b>z_revenue</b>: revenue generated by individual (int2)</li>\n                    <li><b>response</b>: total user responses (int2)</li>\n                  </ul>\n                </Box>\n              </Box>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </Box>\n\n        <Box mt={4}>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography>How to Create a Custom Data Feed</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n\n              <Box>\n                <p>\n                  Data feeds allow you to perform some sort of work to your transformed/redacted datasets, for example sending them to the cloud for download by your employees, or passing off the dataset to some other platform or pipeline.\n                </p>\n\n                <p>\n                  Here are some basic instructions for creating your own custom data feed container for use in your workflow (which you'll reference in your workflow configuration):\n                </p>\n              </Box>\n\n              <Divider my={6} />\n\n              <p>\n                The fields in the configuration form align directly to Kubernetes fields. The only exception is automatically wrapping your command and arguments in shell invoked command, e.g. <code>/bin/bash -c &quot;&lt;your command&gt;&quot; &quot;&lt;your args&gt;&quot;</code>.  Redactics does this because the interface for fetching files created by Redactics is based on http streaming technology which supports Linux pipes so that your files can be transferred from Redactics directly to their ultimate destination without having to copy these files into your post export hook container first.\n              </p>\n\n              <Box mt={8}>\n                <Typography variant=\"h4\" gutterBottom>\n                  HTTP Streaming Interface\n                </Typography>\n\n                <p>You can transfer files within your container in one of two ways:</p>\n\n                <ol>\n                  <li>Via the agent-file streamer script you can copy from our <Link href=\"https://github.com/Redactics/redactics-export-plugin-base/tree/master\" target=\"_blank\">Base Plugin Source Code</Link></li>\n                  <li>Via direct curl commands</li>\n                </ol>\n\n                <Typography variant=\"h6\" gutterBottom>\n                  Agent-filestreamer Usage Examples:\n                </Typography>\n\n                <ul>\n                  <li><code>agent-filestreamer list-files [database ID]</code>: lists files exported from <code>[database ID]</code></li>\n                  <li><code>agent-filestreamer download-export [database ID] [filename]</code>: streams <code>[filename]</code> from <code>[database ID]</code> to stdout</li>\n                  <li><code>agent-filestreamer download-export [database ID] complete-dump.sql | aws s3 cp - s3://your-bucket/complete-dump.sql</code>: streams <code>complete-dump.sql</code> to the provided AWS S3 bucket (assuming your container includes the AWS CLI and authentication to your bucket)</li>\n                </ul>\n\n                <Typography variant=\"h6\" gutterBottom>\n                  Direct Curl Command Examples:\n                </Typography>\n\n                <ul>\n                  <li><code>curl -s http://redactics-http-nas:3000/file/[database ID]</code>: lists files exported from <code>[database ID]</code></li>\n                  <li><code>curl -s --output - http://redactics-http-nas:3000/file/[database ID]%2F[filename]</code>: streams <code>[filename]</code> from <code>[database ID]</code> to stdout (note the &quot;%2F&quot; encoding here, used for traversing into a directory - the &quot;/&quot; character will not work here)</li>\n                  <li><code>curl -s --output - http://redactics-http-nas:3000/file/[database ID]%2F[filename] | aws s3 cp - s3://your-bucket/complete-dump.sql</code>: streams <code>complete-dump.sql</code> to the provided AWS S3 bucket (assuming your container includes the AWS CLI and authentication to your bucket)</li>\n                </ul>\n              </Box>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </Box>\n\n        <Box mt={4}>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography>How to Test the Redactics Agent Locally on your Laptop/PC</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <p>\n                The free <Link href=\"https://docs.docker.com/desktop/\" target=\"_blank\">Docker Desktop</Link> includes Kubernetes support built in. To enable Kubernetes, access your Docker preferences and find the <code>Enable Kubernetes</code> checkbox within the <code>Kubernetes</code> section.\n              </p>\n\n              <p>\n                With Kubernetes enabled, as long as <code>Docker Desktop</code> is selected within your Docker menu -&gt; Kubernetes, you can install the Redactics agent locally. After installing Helm and running the Helm command provided in the <code>Agents</code> section, confirm that all Agent pods are healthy by running <code>kubectl get pods -n [your namespace]</code>, download the Redactics CLI if you haven&apos;t already done so (which supports using local Kubernetes clusters) to kick off jobs manually, and modify your Redactics configuration file provided in the Agent section to provide connection info to your database(s). This connection info is found right below the comment that says <code>this ID matches your workflow created within this web interface</code>.\n              </p>\n\n              <p>\n                If you do not already have a database installed for testing purpose, you can piggyback upon the database provided by the Agent. Simply change:\n              </p>\n              <ul>\n                <li>The <code>hostname</code> for this connection is <code>redacticsDB</code></li>\n                <li>The <code>login</code> to match the \"redacticsDB\" connection in your Helm configuration file</li>\n                <li>The <code>password</code> to match the \"redacticsDB\" connection in your Helm configuration file</li>\n                <li>The <code>schema</code> to <code>redactics_tmp</code></li>\n              </ul>\n\n              <p>\n                This database is installed to apply the data transformations on a copy of your source data, but you can use it to install your own sample tables including the sample tables installable via the Redactics CLI.\n              </p>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </Box>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withTheme(CLI);\n"],"sourceRoot":""}