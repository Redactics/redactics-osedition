{"version":3,"sources":["../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanelContext.js","../node_modules/react-copy-to-clipboard/lib/index.js","../node_modules/react-copy-to-clipboard/lib/Component.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js","../node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js","../node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/icons/esm/Check.js","../node_modules/react-feather/dist/icons/clipboard.js","../node_modules/@material-ui/icons/esm/Warning.js","pages/agents/Agent.tsx","pages/agents/Main.tsx"],"names":["ExpansionPanelContext","React","CopyToClipboard","require","module","exports","Object","defineProperty","value","_react","_interopRequireDefault","_copyToClipboard","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","length","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_setPrototypeOf","p","_defineProperty","_React$PureComponent","_getPrototypeOf2","_this","this","_len","arguments","args","Array","_key","concat","event","_this$props","text","onCopy","children","options","elem","Children","only","result","onClick","protoProps","staticProps","subClass","superClass","create","_inherits","_this$props2","cloneElement","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","PureComponent","undefined","deselectCurrent","clipboardToIE11Formatting","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur","type","focus","ExpansionPanelDetails","ref","classes","className","other","_extends","clsx","root","withStyles","display","padding","name","ExpansionPanelSummary","expandIcon","IconButtonProps","onBlur","onFocusVisible","_React$useState","focusedState","setFocusedState","_React$useContext","_React$useContext$dis","disabled","expanded","toggle","ButtonBase","focusRipple","disableRipple","component","focused","content","IconButton","edge","tabIndex","role","theme","transition","duration","transitions","shortest","minHeight","spacing","cursor","backgroundColor","palette","grey","opacity","flexGrow","margin","transform","ExpansionPanel","arr","childrenProp","_props$defaultExpande","defaultExpanded","_props$disabled","expandedProp","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","_useControlled","useControlled","controlled","default","state","_useControlled2","_slicedToArray","setExpandedState","handleChange","_React$Children$toArr","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","Paper","rounded","Provider","in","timeout","id","left","right","height","divider","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","createSvgIcon","d","assign","hasOwnProperty","Clipboard","color","size","otherProps","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","propTypes","PropTypes","string","oneOfType","number","defaultProps","Card","styled","MuiCard","FormControlSpacing","MuiFormControl","FormControl","MuiExpansionPanelDetails","Grid","MuiGrid","Button","MuiButton","Agent","showTLSInstructions","agent","inputs","input","enableSSL","includes","uuid","saveButtonDisabled","helmCmd","helmCmdHistory","selectedHelmCmd","deleteAgent","verboseSelected","helmConfig","sslSecrets","errors","agentName","namespace","configPath","useNodeSelector","selectedInputs","nodeSelectorLabelKey","nodeSelector","split","nodeSelectorLabelValue","bind","setSaveButtonDisabled","toggleNodeSelector","updateAgent","deleteAgentConfirm","closeDeleteAgent","a","fetch","context","apiUrl","response","json","data","helmConfigResponse","helmData","setState","agentInstallationDate","Check","green","fontSize","Warning","red","match","inputUuid","checked","uninstallCmd","Box","mt","container","justify","item","xs","variant","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","clipboardCopy","DialogActions","agentId","handleErrors","method","headers","JSON","stringify","refreshHelmCmd","updateAgentSnackbar","lastHeartBeatDate","fromNow","Date","Typography","gutterBottom","lastAgentVersion","Fragment","displayAgentStatus","ExpandMore","JSX","fullWidth","TextField","label","InputProps","endAdornment","InputAdornment","Tooltip","title","placement","FormControlLabel","control","Checkbox","map","inputName","Table","TableHead","TableRow","TableCell","TableBody","secret","idx","inputSource","cmd","wordBreak","paddingLeft","mb","CardContent","statusIcon","agentInfo","renderDeleteAgent","Component","contextType","RedacticsContext","Divider","MuiDivider","TextFieldSpacing","MuiTextField","Alert","MuiAlert","Agents","agents","configMaxWidth","newAgentId","illegalChars","sampleDBSelected","sampleAgentConfirmationDialog","showClipboardSnackbar","showSaveSnackbar","disableCancel","showInstallAgentDialog","handleInstallAgent","handleClose","handleSnackbarClose","saveNewAgent","fetchAgents","fetchInputs","getAgentHeartbeatData","childState","errorsFound","illegalCharJSX","severity","illegalPathJSX","illegalNameJSX","fields","f","isIllegalName","isIllegalPath","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-label","Close","maxWidth","installAgent","clipboardSnackbar","saveSnackbar","my","Add","path"],"mappings":"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","file":"static/js/6.b9a4628e.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar ExpansionPanelContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ExpansionPanelContext.displayName = 'ExpansionPanelContext';\n}\n\nexport default ExpansionPanelContext;","\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  function CopyToClipboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CopyToClipboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, [\"text\", \"onCopy\", \"options\", \"children\"]);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return _react[\"default\"].cloneElement(elem, _objectSpread({}, props, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: '8px 24px 24px'\n  }\n};\nvar ExpansionPanelDetails = React.forwardRef(function ExpansionPanelDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from '../ExpansionPanel/ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 3),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        opacity: 0.38\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar ExpansionPanelSummary = React.forwardRef(function ExpansionPanelSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(ExpansionPanelContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelSummary.propTypes = {\n  /**\n   * The content of the expansion panel summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelSummary'\n})(ExpansionPanelSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar ExpansionPanel = React.forwardRef(function ExpansionPanel(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'ExpansionPanel',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: the ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (!React.isValidElement(summary)) {\n      return new Error('Material-UI: expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Clipboard = function Clipboard(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"8\",\n    y: \"2\",\n    width: \"8\",\n    height: \"4\",\n    rx: \"1\",\n    ry: \"1\"\n  }));\n};\n\nClipboard.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nClipboard.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default Clipboard;","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import React from 'react';\nimport styled from 'styled-components';\n\nimport { green, red } from '@material-ui/core/colors';\nimport Moment from 'react-moment';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n  Card as MuiCard,\n  CardContent,\n  FormControl as MuiFormControl,\n  Grid as MuiGrid,\n  Typography,\n  Button as MuiButton,\n  Box,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails as MuiExpansionPanelDetails,\n  Paper,\n  TextField,\n  InputAdornment,\n  Tooltip,\n  FormControlLabel,\n  Checkbox,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from '@material-ui/core';\n\nimport {\n  Check as CheckIcon,\n  Warning as WarningIcon,\n  DeleteOutline as DeleteIcon,\n  ExpandMore as ExpandMoreIcon,\n  HelpOutline as HelpIcon,\n} from '@material-ui/icons';\n\nimport {\n  Clipboard as ClipboardIcon,\n  Save as SaveIcon,\n} from 'react-feather';\n\nimport { spacing } from '@material-ui/system';\n\nimport { HelmCmdHistory, InputRecord, AgentRecord } from '../../types/redactics';\nimport RedacticsContext from '../../contexts/RedacticsContext';\n\nconst Card = styled(MuiCard)(spacing);\n\nconst FormControlSpacing = styled(MuiFormControl)(spacing);\n\nconst FormControl = styled(FormControlSpacing)`\n  min-width: 300px;\n  max-width: 300px;\n`;\n\nconst ExpansionPanelDetails = withStyles({\n  root: {\n    display: 'block',\n  },\n})(MuiExpansionPanelDetails);\n\nconst Grid = styled(MuiGrid)(spacing);\n\nconst Button = styled(MuiButton)(spacing);\n\ninterface IProps {\n  agent: AgentRecord;\n  inputs: InputRecord[];\n  deleteAgent: any;\n  clipboardCopy: any;\n  updateAgentSnackbar: any;\n  handleSnackbarClose: any;\n  useNodeSelector: boolean;\n  handleErrors: any;\n  errors: any;\n}\n\ninterface IState {\n  saveButtonDisabled: boolean;\n  helmCmd: any;\n  helmCmdHistory: HelmCmdHistory[];\n  selectedHelmCmd: string;\n  deleteAgent: boolean;\n  verboseSelected: boolean;\n  helmConfig: string;\n  sslSecrets: string[];\n  errors: any;\n  agent: any;\n  selectedInputs: string[];\n  showTLSInstructions: boolean;\n  agentName: string;\n  namespace: string;\n  configPath: string;\n  useNodeSelector: boolean;\n  nodeSelectorLabelKey: string;\n  nodeSelectorLabelValue: string;\n}\n\nclass Agent extends React.Component<IProps, IState> {\n  static contextType = RedacticsContext;\n\n  constructor(props: IProps) {\n    super(props);\n\n    let showTLSInstructions = false;\n    if (this.props.agent.inputs) {\n      this.props.inputs.forEach((input:InputRecord) => {\n        if (input.enableSSL && this.props.agent.inputs?.includes(input.uuid)) {\n          showTLSInstructions = true;\n        }\n      })\n    }\n\n    this.state = {\n      saveButtonDisabled: true,\n      helmCmd: '',\n      helmCmdHistory: [],\n      selectedHelmCmd: '',\n      deleteAgent: false,\n      verboseSelected: false,\n      helmConfig: '',\n      sslSecrets: [],\n      errors: {\n        agentName: false,\n        namespace: false,\n        configPath: false,\n      },\n      agent: this.props.agent,\n      agentName: this.props.agent.name || \"\",\n      namespace: this.props.agent.namespace || \"\",\n      configPath: this.props.agent.configPath || \"\",\n      useNodeSelector: this.props.useNodeSelector,\n      selectedInputs: this.props.agent.inputs || [],\n      showTLSInstructions: showTLSInstructions,\n      nodeSelectorLabelKey: (this.props.useNodeSelector) ? this.props.agent.nodeSelector.split('.')[0] : \"\",\n      nodeSelectorLabelValue: (this.props.useNodeSelector) ? this.props.agent.nodeSelector.split('.')[1] : \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    //this.handleHelmCmd = this.handleHelmCmd.bind(this);\n    this.setSaveButtonDisabled = this.setSaveButtonDisabled.bind(this);\n    this.toggleNodeSelector = this.toggleNodeSelector.bind(this);\n    this.deleteAgent = this.deleteAgent.bind(this);\n    this.updateAgent = this.updateAgent.bind(this);\n    this.deleteAgentConfirm = this.deleteAgentConfirm.bind(this);\n    this.closeDeleteAgent = this.closeDeleteAgent.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(`${this.context.apiUrl}/agent/${this.props.agent.uuid}/helmCmd`);\n      const data = await response.json();\n\n      const { helmCmd } = data;\n      const { helmCmdHistory } = data;\n\n      const helmConfigResponse = await fetch(`${this.context.apiUrl}/agent/${this.props.agent.uuid}/helmConfig`);\n\n      const helmData = await helmConfigResponse.json();\n      const { helmConfig, sslSecrets } = helmData;\n\n      this.setSaveButtonDisabled();\n\n      this.setState({\n        helmCmd,\n        helmConfig,\n        sslSecrets,\n        helmCmdHistory,\n        selectedHelmCmd: helmCmdHistory.length ? helmCmdHistory[0].uuid : '',\n      });\n    } catch (err) {\n      // console.log('CATCH ERR', error);\n    }\n  }\n\n  statusIcon() {\n    return this.props.agent.agentInstallationDate\n      ? <CheckIcon style={{ color: green[500], fontSize: 50 }} />\n      : <WarningIcon style={{ color: red[500], fontSize: 50 }} />;\n  }\n\n  setSaveButtonDisabled() {\n    this.setState({\n      saveButtonDisabled: !((this.state.agentName && this.state.namespace && this.state.configPath)),\n    });\n  }\n\n  handleChange(event:any) {\n    const state:any = {\n      selectedInputs: this.state.selectedInputs\n    };\n    if (event.target.name.match(/^inputsource_/)) {\n      const inputUuid = event.target.name.replace(/^inputsource_/, '');\n      if (event.target.checked && !state.selectedInputs.includes(inputUuid)) {\n        state.selectedInputs.push(inputUuid);\n      }\n      else {\n        state.selectedInputs = state.selectedInputs.filter((uuid:string) => {\n          return (uuid !== inputUuid)\n        });\n      }\n    }\n    else {\n      state[event.target.name] = event.target.value;\n    }\n    this.setState(state, () => {\n      this.setSaveButtonDisabled();\n    });\n  }\n\n  // TODO: for embedded Helm config feature\n  // handleHelmCmd(event:any) {\n  //   // find helm command\n  //   const helmCmd = this.state.helmCmdHistory.filter((c:HelmCmdHistory) => {\n  //     if (c.uuid === event.target.value) {\n  //       return c;\n  //     }\n\n  //     return false;\n  //   });\n\n  //   this.setState({\n  //     selectedHelmCmd: event.target.value,\n  //     helmCmd: helmCmd[0].cmd,\n  //     verboseSelected: false,\n  //   });\n  // }\n\n  deleteAgent() {\n    this.setState({\n      deleteAgent: true,\n    });\n  }\n\n  async deleteAgentConfirm() {\n    await this.props.deleteAgent(this.props.agent.uuid);\n\n    this.setState({\n      deleteAgent: false,\n    });\n  }\n\n  closeDeleteAgent() {\n    this.setState({\n      deleteAgent: false,\n    });\n  }\n\n  /* eslint-disable max-len */\n\n  renderDeleteAgent() {\n    const uninstallCmd = `helm uninstall -n ${this.state.namespace} redactics`;\n\n    return (\n      <Box mt={4}>\n        <Grid\n          container\n          justify=\"space-between\"\n          mt={12}\n        >\n          <Grid item xs={10}>\n          </Grid>\n          <Grid item>\n            <Button variant=\"contained\" color=\"default\" size=\"small\" onClick={this.deleteAgent}>\n              <DeleteIcon />&nbsp;\n              Delete Agent\n            </Button>\n          </Grid>\n        </Grid>\n        <Dialog\n          open={this.state.deleteAgent}\n          onClose={this.closeDeleteAgent}\n          aria-labelledby=\"delete-agent-title\"\n          aria-describedby=\"legend-description\"\n        >\n          <DialogTitle id=\"delete-agent-title\">Delete This Agent?</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"delete-agent-description\">\n              Clicking <b>Delete</b> will delete the settings for this agent, but to remove this agent from your cluster locally, please enter the following (assuming this namespace contains only Redactics configurations). Any workflows associated with this agent will need to be reassigned to a new agent for the config to be put to use.\n\n              <Box mt={4}>\n                <CopyToClipboard text={uninstallCmd} onCopy={this.props.clipboardCopy}>\n                  <Button variant=\"outlined\" size=\"small\" color=\"secondary\"><ClipboardIcon /></Button>\n                </CopyToClipboard>\n                <pre>\n                  {uninstallCmd}\n                </pre>\n              </Box>\n            </DialogContentText>\n\n            <Box mt={4}>\n              <DialogActions>\n                <Button onClick={this.closeDeleteAgent}>\n                  Cancel\n                </Button>\n                <Button color=\"secondary\" onClick={this.deleteAgentConfirm}>\n                  Delete\n                </Button>\n              </DialogActions>\n            </Box>\n          </DialogContent>\n        </Dialog>\n      </Box>\n    );\n  }\n\n  toggleNodeSelector(event:any) {\n    this.setState({\n      useNodeSelector: event.target.checked,\n    });\n  }\n\n  async updateAgent() {\n    const state:any = {};\n    const agentId = this.state.agent.uuid;\n    const nodeSelector = (this.state.useNodeSelector) ? `${this.state.nodeSelectorLabelKey}.${this.state.nodeSelectorLabelValue}` : '';\n    const errorsFound = this.props.handleErrors({\n      agentName: this.state.agentName,\n      namespace: this.state.namespace,\n      useNodeSelector: this.state.useNodeSelector,\n      nodeSelectorLabelKey: this.state.nodeSelectorLabelKey,\n      nodeSelectorLabelValue: this.state.nodeSelectorLabelValue,\n      configPath: this.state.configPath,\n      errors: this.state.errors,\n    });\n    if (errorsFound) { return; }\n\n    try {\n      await fetch(`${this.context.apiUrl}/agent/${agentId}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: this.state.agentName,\n          namespace: this.state.namespace,\n          nodeSelector,\n          configPath: this.state.configPath,\n          inputs: this.state.selectedInputs,\n        }),\n      });\n\n      // refresh helm config\n      const refreshHelmCmd = await fetch(`${this.context.apiUrl}/agent/${agentId}/helmCmd`);\n      const helmData = await refreshHelmCmd.json();\n      const { helmCmd, helmCmdHistory } = helmData;\n\n      state.helmCmd = helmCmd;\n      state.helmCmdHistory = helmCmdHistory;\n      this.props.updateAgentSnackbar();\n\n      this.setState(state);\n    } catch (err) {\n      // console.log(err);\n    }\n  }\n\n  displayAgentStatus() {\n    if (this.props.agent.agentInstallationDate) {\n      const lastHeartBeatDate = this.props.agent.lastHeartBeatDate ? (\n        <div>\n          Last configuration update date: <b><Moment fromNow>{new Date(this.props.agent.lastHeartBeatDate)}</Moment></b>\n        </div>\n      ) : '';\n  \n      return (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Redactics Agent Info\n          </Typography>\n          <Box mt={2}>\n            <div>\n              Version: <b>{this.props.agent.lastAgentVersion}</b>\n            </div>\n            <div>\n              Initial installation date: <b><Moment fromNow>{new Date(this.props.agent.agentInstallationDate)}</Moment></b>\n            </div>\n            {lastHeartBeatDate}\n          </Box>\n        </Box>\n      )\n    }\n    else {\n      return (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Awaiting Agent Reporting...\n          </Typography>\n        </Box>\n      )\n    }\n  }\n\n  agentInfo() {\n    return (\n      <React.Fragment>\n        {this.displayAgentStatus()}\n        \n        <Box mt={4}>\n          <Paper variant=\"outlined\">\n            <ExpansionPanel>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography>Agent Settings</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                {this.props.errors.JSX}\n\n                <Box mt={2}>\n                  <FormControl fullWidth variant=\"outlined\">\n                    <TextField\n                      error={this.state.errors.agentName}\n                      name=\"agentName\"\n                      label=\"Agent Name\"\n                      value={this.state.agentName}\n                      onChange={this.handleChange}\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\"><Tooltip title=\"Unique name used to identify this agent (e.g. cluster or environment name)\" placement=\"right-start\"><HelpIcon /></Tooltip></InputAdornment>,\n                      }}\n                    />\n                  </FormControl>\n                </Box>\n\n                <Box mt={4}>\n                  <FormControl fullWidth variant=\"outlined\">\n                    <TextField\n                      error={this.state.errors.namespace}\n                      name=\"namespace\"\n                      label=\"Kubernetes Namespace\"\n                      value={this.state.namespace}\n                      onChange={this.handleChange}\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\"><Tooltip title=\"Kubernetes namespace used for the Redactics Agent\" placement=\"right-start\"><HelpIcon /></Tooltip></InputAdornment>,\n                      }}\n                    />\n                  </FormControl>\n                </Box>\n\n                <Box mt={4}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.useNodeSelector}\n                        onChange={this.toggleNodeSelector}\n                        name=\"useNodeSelector\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Assign Agent Pods to Specific Nodes (optional)\"\n                  /> <Tooltip title=\"Optional Kubernetes nodeSelector label for Redactics Agent (allows prevent unwanted resource competition during export jobs), requires label key and value\" placement=\"right-start\"><HelpIcon /></Tooltip>\n                </Box>\n\n                <Box mt={4} display={(this.state.useNodeSelector) ? 'block' : 'none'}>\n                  <Box>\n                    <FormControl fullWidth variant=\"outlined\">\n                      <TextField\n                        error={this.state.errors.nodeSelectorLabelKey}\n                        name=\"nodeSelectorLabelKey\"\n                        label=\"Kubernetes Node Selector Label Key\"\n                        value={this.state.nodeSelectorLabelKey}\n                        onChange={this.handleChange}\n                      />\n                    </FormControl>\n                  </Box>\n\n                  <Box mt={4}>\n                    <FormControl fullWidth variant=\"outlined\">\n                      <TextField\n                        error={this.state.errors.nodeSelectorLabelValue}\n                        name=\"nodeSelectorLabelValue\"\n                        label=\"Kubernetes Node Selector Label Value\"\n                        value={this.state.nodeSelectorLabelValue}\n                        onChange={this.handleChange}\n                      />\n                    </FormControl>\n                  </Box>\n                </Box>\n\n                <Box mt={4}>\n                  <FormControl fullWidth variant=\"outlined\">\n                    <TextField\n                      error={this.state.errors.configPath}\n                      name=\"configPath\"\n                      label=\"Local Helm Config Path\"\n                      value={this.state.configPath}\n                      onChange={this.handleChange}\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\"><Tooltip title=\"Path to where you would like to save your Helm configuration file\" placement=\"right-start\"><HelpIcon /></Tooltip></InputAdornment>,\n                      }}\n                    />\n                  </FormControl>\n                </Box>\n\n                <Box mt={8}>\n                  <Typography variant=\"h4\">\n                    Data Sources\n                  </Typography>\n\n                  <Box mt={2}>\n                    <Typography>\n                      Use the following Data Sources with this Agent:\n                    </Typography>\n\n                    {this.props.inputs.map((input:InputRecord) => (\n                      <FormControlLabel\n                        key={input.uuid}\n                        control={\n                          <Checkbox\n                            name={(\"inputsource_\" + input.uuid)}\n                            color=\"primary\"\n                            onChange={this.handleChange}\n                            checked={this.state.selectedInputs.includes(input.uuid)}\n                          />\n                        }\n                        label={input.inputName}\n                      />\n                    ))}\n                  </Box>\n                </Box>\n\n                <Box mt={8}>\n                  <Button color=\"secondary\" variant=\"contained\"  disabled={this.state.saveButtonDisabled} onClick={this.updateAgent}>\n                    <SaveIcon />&nbsp;Save Changes\n                  </Button>\n                </Box>\n\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </Paper>\n        </Box>\n\n        <Box mt={4} display={(this.state.showTLSInstructions) ? \"block\" : \"none\"}>\n          <Paper variant=\"outlined\">\n            <ExpansionPanel>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography>Agent TLS/SSL Input Setup Instructions</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                Enabling TLS/SSL encryption with your connectivity to your input sources requires performing the following steps. These steps (even upon completion) will remain available here for reference:\n\n                <ol>\n                  <li>Figure out whether your database requires presenting only the root CA certificate, or the root CA as well as client cert and key files. Download these required files.</li>\n                  <li>Create a Kubernetes secret containing the certificates required by your database using the commands required below. Adjust the file paths to your downloaded certificates, and take out the <code>sslcert</code> and <code>sslkey</code> params if your server doesn&apos;t require access to these.</li>\n                </ol>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Input Source</TableCell>\n                      <TableCell>Secret Creation Command</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                  {this.state.sslSecrets.map((secret:any, idx) => (\n                    <TableRow key={idx}>\n                      <TableCell>{secret.inputSource}</TableCell>\n                      <TableCell>{secret.cmd}</TableCell>\n                      <TableCell>\n                        <CopyToClipboard text={secret.cmd} onCopy={this.props.clipboardCopy}>\n                          <Button variant=\"outlined\" size=\"small\" color=\"secondary\"><ClipboardIcon /></Button>\n                        </CopyToClipboard>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                  </TableBody>\n                </Table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </Paper>\n        </Box>\n        \n        <Box mt={4}>\n          <Paper variant=\"outlined\">\n            <ExpansionPanel>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography>Agent Config File</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <p>\n                  Please copy and paste this helm configuration file to <b>{this.state.configPath}</b>, and change all of the <b>changemes</b> in this file to real values. This configuration file will be automatically regenerated as you add/remove database inputs from your workflows, at which time you'll have to update this file with the provided updated configuration.\n                </p>\n\n                <Box mt={8}>\n                  <CopyToClipboard text={this.state.helmConfig} onCopy={this.props.clipboardCopy}>\n                    <Button variant=\"outlined\" size=\"small\" color=\"secondary\"><ClipboardIcon /></Button>\n                  </CopyToClipboard>\n                </Box>\n\n                <Box mt={2}>\n                  <pre style={{ whiteSpace: 'pre-wrap', wordBreak: 'break-all' }}>\n                    {this.state.helmConfig}\n                  </pre>\n                </Box>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </Paper>\n        </Box>\n\n        <Box mt={4}>\n          <Paper variant=\"outlined\">\n            <ExpansionPanel defaultExpanded>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography>Agent Helm Upgrade/Install Command</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Box mt={2}>\n                  <CopyToClipboard text={this.state.helmCmd.replace(/\\\\n/g, '\\n')} onCopy={this.props.clipboardCopy}>\n                    <Button variant=\"outlined\" size=\"small\" color=\"secondary\"><ClipboardIcon /></Button>\n                  </CopyToClipboard>\n                </Box>\n\n                <pre style={{ whiteSpace: 'normal' }}>\n                  {this.state.helmCmd.split('\\\\n').map((item:string, key:string) => (key\n                    ? (\n                        <span key={key} style={{ wordBreak: 'break-all', paddingLeft: '15px' }}>\n                          {item}\n                          <br/>\n                        </span>\n                    )\n                    : (\n                        <span key={key} style={{ wordBreak: 'break-all' }}>\n                          {item}\n                          <br/>\n                        </span>\n                    )))}\n                </pre>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </Paper>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Card mb={6}>\n        <CardContent>\n          <Grid\n            justify=\"space-between\"\n            container\n            spacing={10}\n          >\n\n            <Grid item xs={1}>\n              {this.statusIcon()}\n            </Grid>\n\n            <Grid item xs={11}>\n              <Typography variant=\"h4\">\n                {this.state.agentName} <code>({this.props.agent.uuid})</code>\n              </Typography>\n\n              <Box mt={4}>\n                {this.agentInfo()}\n              </Box>\n\n              {this.renderDeleteAgent()}\n            </Grid>\n\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default Agent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Helmet from 'react-helmet';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  Divider as MuiDivider,\n  FormControl as MuiFormControl,\n  Grid as MuiGrid,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField as MuiTextField,\n  Button as MuiButton,\n  Tooltip,\n  InputAdornment,\n  Box,\n  Snackbar,\n  IconButton,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\n\nimport {\n  Add as AddIcon,\n  HelpOutline as HelpIcon,\n  Close as CloseIcon,\n} from '@material-ui/icons';\n\nimport {\n  Save as SaveIcon,\n} from 'react-feather';\n\nimport { spacing } from '@material-ui/system';\n\nimport { Alert as MuiAlert } from '@material-ui/lab';\n\nimport { AgentRecord, InputRecord } from '../../types/redactics';\nimport RedacticsContext from '../../contexts/RedacticsContext';\n\nimport Agent from './Agent';\n\nconst Divider = styled(MuiDivider)(spacing);\n\nconst Grid = styled(MuiGrid)(spacing);\n\nconst TextFieldSpacing = styled(MuiTextField)(spacing);\n\nconst TextField = styled(TextFieldSpacing)`\n  width: 400px;\n`;\n\nconst FormControlSpacing = styled(MuiFormControl)(spacing);\n\nconst FormControl = styled(FormControlSpacing)`\n  min-width: 400px;\n  max-width: 800px;\n`;\n\nconst Button = styled(MuiButton)(spacing);\n\nconst Alert = styled(MuiAlert)(spacing);\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\ninterface IProps {\n\n}\n\ninterface IState {\n  namespace: string;\n  configPath: string;\n  saveButtonDisabled: boolean;\n  agents: AgentRecord[];\n  inputs: InputRecord[];\n  helmConfig: string;\n  configMaxWidth: any;\n  newAgentId: string;\n  illegalChars: boolean;\n  sampleDBSelected: boolean;\n  sampleAgentConfirmationDialog: boolean;\n  useNodeSelector: boolean;\n  nodeSelectorLabelKey: string;\n  nodeSelectorLabelValue: string;\n  disableCancel: boolean;\n  errors: any;\n  showClipboardSnackbar: boolean;\n  showSaveSnackbar: boolean;\n  agentName: string;\n  nodeSelector: string;\n  selectedInputs: string[];\n  showInstallAgentDialog: boolean;\n}\n\nclass Agents extends React.Component<IProps, IState> {\n  static contextType = RedacticsContext;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      namespace: 'redactics',\n      configPath: '~/.redactics/values.yaml',\n      saveButtonDisabled: true,\n      agents: [],\n      inputs: [],\n      helmConfig: '',\n      configMaxWidth: 'md',\n      newAgentId: '',\n      illegalChars: false,\n      sampleDBSelected: false,\n      sampleAgentConfirmationDialog: false,\n      useNodeSelector: false,\n      nodeSelectorLabelKey: 'nodePool',\n      nodeSelectorLabelValue: 'agent',\n      showClipboardSnackbar: false,\n      showSaveSnackbar: false,\n      disableCancel: false,\n      agentName: '',\n      nodeSelector: '',\n      selectedInputs: [],\n      errors: {\n        agentName: false,\n        namespace: false,\n        configPath: false,\n        illegalChars: ''\n      },\n      showInstallAgentDialog: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInstallAgent = this.handleInstallAgent.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleErrors = this.handleErrors.bind(this);\n    this.deleteAgent = this.deleteAgent.bind(this);\n    this.clipboardCopy = this.clipboardCopy.bind(this);\n    this.updateAgentSnackbar = this.updateAgentSnackbar.bind(this);\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\n    this.toggleNodeSelector = this.toggleNodeSelector.bind(this);\n    this.saveNewAgent = this.saveNewAgent.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchAgents();\n    this.fetchInputs();\n    this.getAgentHeartbeatData();\n  }\n\n  async fetchAgents() {\n    try {\n      const response = await fetch(`${this.context.apiUrl}/agent`);\n      const data = await response.json();\n\n      // TODO: data structure should be data.agents\n      //console.log(data);\n      this.setState({\n        agents: data,\n        showInstallAgentDialog: (!data.length)\n      });\n    } catch (err) {\n      // console.log(err);\n    }\n  }\n\n  async fetchInputs() {\n    try {\n      const response = await fetch(`${this.context.apiUrl}/input`);\n      const data = await response.json();\n\n      // select all possible inputs for initial state\n      let selectedInputs:string[] = [];\n      data.inputs.forEach((input:InputRecord) => {\n        selectedInputs.push(input.uuid);\n      });\n\n      this.setState({\n        inputs: data.inputs,\n        selectedInputs,\n      })\n    } catch (err) {\n      // console.log(err);\n    }\n  }\n\n  clipboardCopy() {\n    this.setState({\n      showClipboardSnackbar: true,\n    });\n  }\n\n  updateAgentSnackbar() {\n    this.setState({\n      showSaveSnackbar: true,\n    });\n  }\n\n  handleSnackbarClose() {\n    this.setState({\n      showClipboardSnackbar: false,\n      showSaveSnackbar: false,\n    });\n  }\n\n  async deleteAgent(agentId:string) {\n    try {\n      await fetch(`${this.context.apiUrl}/agent/${agentId}`, {\n        method: 'delete',\n      });\n      this.fetchAgents();\n      this.fetchInputs();\n    } catch (err) {\n      // console.log('CATCH ERR', error);\n    }\n  }\n\n  handleChange(event:any) {\n    const state:any = {};\n    if (event.target.name.match(/^inputsource_/)) {\n      const inputUuid = event.target.name.replace(/^inputsource_/, '');\n      if (event.target.checked && !state.selectedInputs.includes(inputUuid)) {\n        state.selectedInputs.push(inputUuid);\n      }\n      else {\n        state.selectedInputs = state.selectedInputs.filter((uuid:string) => {\n          return (uuid !== inputUuid)\n        });\n      }\n    }\n    else {\n      state[event.target.name] = event.target.value;\n    }\n\n    this.setState(state);\n  }\n\n  static isIllegalName(name:string) {\n    if (!name.match(/^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$/)) {\n      return true;\n    }\n    return false;\n  }\n\n  static isIllegalPath(path:string) {\n    if (!path.match(/(\\/|\\\\)/)) {\n      return true;\n    }\n    return false;\n  }\n\n  handleErrors(childState:any=null) {\n    let errorsFound = false;\n    const state:any = (childState) ? childState : this.state as any;\n\n    const illegalCharJSX = (\n      <Alert mb={4} severity=\"error\">Kubernetes names must be no longer than 63 characters, must start and end with a lowercase letter or number, and may contain lowercase letters, numbers, and hyphens.</Alert>\n    );\n\n    const illegalPathJSX = (\n      <Alert mb={4} severity=\"error\">Invalid path</Alert>\n    );\n\n    const illegalNameJSX = (\n      <Alert mb={4} severity=\"error\">An Agent Name is required</Alert>\n    );\n\n    const fields = ['namespace'];\n    if (state.useNodeSelector) {\n      fields.push('nodeSelectorLabelKey');\n      fields.push('nodeSelectorLabelValue');\n    }\n    state.errors.JSX = '';\n    state.errors.agentName = false;\n    state.errors.configPath = false;\n\n    fields.forEach((f) => {\n      state.errors[f] = false;\n\n      if (Agents.isIllegalName(state[f])) {\n        state.errors[f] = true;\n        if (state[f]) {\n          state.errors.JSX = illegalCharJSX;\n        }\n        errorsFound = true;\n      }\n    });\n\n    if (Agents.isIllegalPath(state.configPath)) {\n      state.errors.configPath = true;\n      state.errors.JSX = illegalPathJSX;\n      errorsFound = true;\n    } else {\n      state.errors.configPath = false;\n    }\n\n    if (!state.agentName) {\n      errorsFound = true;\n      state.errors.agentName = true;\n      state.errors.JSX = illegalNameJSX;\n    }\n\n    this.setState(state);\n    return errorsFound;\n  }\n\n  handleInstallAgent() {\n    this.setState({\n      showInstallAgentDialog: true,\n      agentName: '',\n      namespace: 'redactics',\n      nodeSelector: '',\n      useNodeSelector: false,\n      configPath: '~/.redactics/values.yaml',\n    })\n  }\n\n  handleClose() {\n    this.setState({\n      showInstallAgentDialog: false,\n    });\n  }\n\n  toggleNodeSelector(event:any) {\n    this.setState({\n      useNodeSelector: event.target.checked,\n    });\n  }\n\n  clipboardSnackbar() {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={this.state.showClipboardSnackbar}\n        autoHideDuration={8000}\n        onClose={this.handleSnackbarClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">This command has been copied to your clipboard</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={this.handleSnackbarClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    );\n  }\n\n  saveSnackbar() {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={this.state.showSaveSnackbar}\n        autoHideDuration={8000}\n        onClose={this.handleSnackbarClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">Your changes have been saved</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={this.handleSnackbarClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    );\n  }\n\n\n  async saveNewAgent() {\n    const state:any = {};\n    const nodeSelector = (this.state.useNodeSelector) ? `${this.state.nodeSelectorLabelKey}.${this.state.nodeSelectorLabelValue}` : '';\n    const errorsFound = this.handleErrors();\n    if (errorsFound) { return; }\n\n    try {\n      await fetch(`${this.context.apiUrl}/agent`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: this.state.agentName,\n          namespace: this.state.namespace,\n          nodeSelector,\n          configPath: this.state.configPath,\n          inputs: this.state.selectedInputs,\n        }),\n      });\n\n      this.fetchAgents();\n      state.showInstallAgentDialog = false;\n\n      this.setState(state);\n    } catch (err) {\n      // console.log(err);\n    }\n  }\n\n  installAgent() {\n    return (\n      <React.Fragment>\n        <Box>\n          <p>Redactics requires installation of the Redactics Agent helm chart onto a Kubernetes cluster which has network access to your application database(s). The agent is used for carrying out the work in the workflows you&apos;ve defined here. Each Kubernetes cluster needs a single agent installed (a single agent can control multiple databases).</p>\n\n          {this.state.illegalChars}\n        </Box>\n\n        {this.state.errors.JSX}\n\n        <Box mt={2}>\n          <FormControl fullWidth variant=\"outlined\">\n            <TextField\n              error={this.state.errors.agentName}\n              name=\"agentName\"\n              label=\"Agent Name\"\n              value={this.state.agentName}\n              onChange={this.handleChange}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\"><Tooltip title=\"Unique name used to identify this agent (e.g. cluster or environment name)\" placement=\"right-start\"><HelpIcon /></Tooltip></InputAdornment>,\n              }}\n            />\n          </FormControl>\n        </Box>\n\n        <Box mt={4}>\n          <FormControl fullWidth variant=\"outlined\">\n            <TextField\n              error={this.state.errors.namespace}\n              name=\"namespace\"\n              label=\"Kubernetes Namespace\"\n              value={this.state.namespace}\n              onChange={this.handleChange}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\"><Tooltip title=\"Kubernetes namespace used for the Redactics Agent\" placement=\"right-start\"><HelpIcon /></Tooltip></InputAdornment>,\n              }}\n            />\n          </FormControl>\n        </Box>\n\n        <Box mt={4}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.useNodeSelector}\n                onChange={this.toggleNodeSelector}\n                name=\"useNodeSelector\"\n                color=\"primary\"\n              />\n            }\n            label=\"Assign Agent Pods to Specific Nodes (optional)\"\n          /> <Tooltip title=\"Optional Kubernetes nodeSelector label for Redactics Agent (allows prevent unwanted resource competition during export jobs), requires label key and value\" placement=\"right-start\"><HelpIcon /></Tooltip>\n        </Box>\n\n        <Box mt={4} display={(this.state.useNodeSelector) ? 'block' : 'none'}>\n          <Box>\n            <FormControl fullWidth variant=\"outlined\">\n              <TextField\n                name=\"nodeSelectorLabelKey\"\n                label=\"Kubernetes Node Selector Label Key\"\n                value={this.state.nodeSelectorLabelKey}\n                onChange={this.handleChange}\n              />\n            </FormControl>\n          </Box>\n\n          <Box mt={4}>\n            <FormControl fullWidth variant=\"outlined\">\n              <TextField\n                name=\"nodeSelectorLabelValue\"\n                label=\"Kubernetes Node Selector Label Value\"\n                value={this.state.nodeSelectorLabelValue}\n                onChange={this.handleChange}\n              />\n            </FormControl>\n          </Box>\n        </Box>\n\n        <Box mt={4}>\n          <FormControl fullWidth variant=\"outlined\">\n            <TextField\n              error={this.state.errors.configPath}\n              name=\"configPath\"\n              label=\"Local Helm Config Path\"\n              value={this.state.configPath}\n              onChange={this.handleChange}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\"><Tooltip title=\"Path to where you would like to save your Helm configuration file\" placement=\"right-start\"><HelpIcon /></Tooltip></InputAdornment>,\n              }}\n            />\n          </FormControl>\n        </Box>\n\n        <Box mt={8}>\n          <Typography variant=\"h4\">\n            Input Sources\n          </Typography>\n\n          <Box mt={2}>\n            <Typography>\n              Use the following Input Sources with this Agent:\n            </Typography>\n\n            {this.state.inputs.map((input:InputRecord) => (\n              <FormControlLabel\n                key={input.uuid}\n                control={\n                  <Checkbox\n                    name={(\"inputsource_\" + input.uuid)}\n                    color=\"primary\"\n                    onChange={this.handleChange}\n                    checked={this.state.selectedInputs.includes(input.uuid)}\n                  />\n                }\n                label={input.inputName}\n              />\n            ))}\n          </Box>\n        </Box>\n\n        <DialogActions>\n          <Button color=\"secondary\" variant=\"contained\" onClick={this.saveNewAgent}>\n            Save&nbsp;<SaveIcon />\n          </Button>\n        </DialogActions>\n      </React.Fragment>\n    )\n  }\n\n  /* eslint-disable max-len */\n  /* eslint-disable no-restricted-syntax */\n\n  getAgentHeartbeatData() {\n    // const notifications = ref(fbDatabase, `notifications/${this.context.companyId}`);\n    // onValue(notifications, (snapshot) => {\n    //   const data = snapshot.val();\n    //   if (!data) { return; }\n\n    //   for (const [key, v] of Object.entries(data)) {\n    //     // cast Firebase data to AgentFirebaseRecord type\n    //     const val:AgentFirebaseRecord = v as AgentFirebaseRecord;\n    //     if (key && (val.firstHeartbeat || val.heartbeat)) {\n    //       const agents = this.state.agents.map((c:AgentRecord) => {\n    //         const agent = c;\n    //         if (agent.uuid === val.agentId) {\n    //           if (val.firstHeartbeat && val.timestamp) {\n    //             agent.agentInstallationDate = new Date(val.timestamp).toISOString();\n    //             //agent.agentInstallationDate = \"\";\n    //           } else if (val.heartbeat && val.timestamp) {\n    //             agent.lastHeartBeatDate = new Date(val.timestamp).toISOString();\n    //           }\n    //         }\n\n    //         return agent;\n    //       });\n\n    //       this.setState({\n    //         agents,\n    //       });\n    //     }\n    //   }\n    // });\n  }\n\n  render() {\n    /* eslint-disable no-restricted-syntax */\n\n    return (\n      <React.Fragment>\n        <Dialog\n          open={this.state.showInstallAgentDialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"dialog-title\"\n          aria-describedby=\"dialog-description\"\n          maxWidth={this.state.configMaxWidth}\n        >\n          <DialogTitle id=\"dialog-title\">Configure Your Redactics Agent</DialogTitle>\n          <DialogContent>\n            {this.installAgent()}\n          </DialogContent>\n        </Dialog>\n\n        {this.clipboardSnackbar()}\n        {this.saveSnackbar()}\n\n        <Helmet title=\"Agents\" />\n\n        <Typography variant=\"h1\" gutterBottom display=\"inline\">\n          Agents\n        </Typography>\n\n        <Divider my={6} />\n\n        <Box mt={4}>\n          <Typography variant=\"body1\" gutterBottom>\n            Install the Redactics Agent adjacent to your input sources using the provided configuration and install command.\n          </Typography>\n        </Box>\n\n        <Box mt={8}>\n          <Grid\n            justify=\"space-between\"\n            container\n            spacing={10}\n          >\n            <Grid item xs={1} mb={6}>\n\n            </Grid>\n\n            <Grid item>\n              <Box mb={4}>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={this.handleInstallAgent}>\n                  <AddIcon />\n                  Install New Agent\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n\n        {this.state.agents.map((agent:AgentRecord) => <Agent\n          clipboardCopy={this.clipboardCopy}\n          updateAgentSnackbar={this.updateAgentSnackbar}\n          handleSnackbarClose={this.handleSnackbarClose}\n          deleteAgent={this.deleteAgent}\n          agent={agent}\n          inputs={this.state.inputs}\n          key={agent.uuid}\n          useNodeSelector={(agent.nodeSelector) ? true : false}\n          handleErrors={this.handleErrors}\n          errors={this.state.errors}\n        />)}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Agents;\n"],"sourceRoot":""}