{"version":3,"sources":["../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanelContext.js","../node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js","../node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","pages/settings/DefaultRedactEmail.tsx","pages/settings/DefaultReplacement.tsx","pages/settings/DefaultRandomString.tsx","pages/settings/PresetRedactEmail.tsx","pages/settings/PresetReplacement.tsx","pages/settings/PresetRandomString.tsx","pages/settings/Preset.tsx","pages/settings/Main.tsx"],"names":["ExpansionPanelContext","React","ExpansionPanelDetails","props","ref","classes","className","other","_objectWithoutProperties","_extends","clsx","root","withStyles","display","padding","name","ExpansionPanelSummary","children","expandIcon","IconButtonProps","onBlur","onClick","onFocusVisible","_React$useState","focusedState","setFocusedState","_React$useContext","_React$useContext$dis","disabled","expanded","toggle","ButtonBase","focusRipple","disableRipple","component","focused","event","content","IconButton","edge","tabIndex","role","theme","transition","duration","transitions","shortest","minHeight","create","spacing","cursor","backgroundColor","palette","grey","opacity","flexGrow","margin","transform","ExpansionPanel","arr","childrenProp","_props$defaultExpande","defaultExpanded","_props$disabled","expandedProp","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","_useControlled","useControlled","controlled","default","state","_useControlled2","_slicedToArray","setExpandedState","handleChange","_React$Children$toArr","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","Paper","rounded","Provider","value","in","timeout","id","position","left","top","right","height","divider","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","MenuItem","_props$component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","selected","tabIndexProp","undefined","ListItem","button","dense","gutters","typography","body1","_defineProperty","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","FormControl","styled","MuiFormControl","TextFieldSpacing","MuiTextField","TextField","DefaultRedactEmail","Fragment","Typography","variant","gutterBottom","noValidate","autoComplete","fullWidth","label","this","ruleDefaults","redactData","prefix","handleRedactEmailChange","primaryKey","domain","Box","mt","Component","DefaultReplacement","replacement","handleReplacementChange","DefaultRandomString","chars","type","handleRandomStringChange","generateRandom","length","result","i","Math","floor","random","PresetRedactEmail","key","selectedPreset","defaultValue","PresetReplacement","PresetRandomString","Grid","MuiGrid","Button","MuiButton","SelectSpacing","MuiSelect","Select","Preset","ruleLabelWidth","rulesets","preset","resetPresetName","bind","presetName","setState","handlePresetChange","onFocus","InputLabel","rule","input","OutlinedInput","labelWidth","map","redactKey","redactName","container","justify","alignItems","item","xs","color","size","deletePreset","Divider","MuiDivider","Card","MuiCard","MuiExpansionPanelDetails","Settings","handleSnackbarClose","showSnackbar","uniquePresetKey","incompletePreset","presets","errors","isOwner","saveDefaultRulesButtonDisabled","saveCustomPresetButtonDisabled","helmReminderCheckbox","ackHelmReminder","redactEmailDefault","uuid","redactReplacementDefault","redactRandomStringDefault","refreshSettings","addPreset","saveDefaultRules","handlePresetSave","handlePresetDelete","toggleExpandPanel","validatePreset","validateDefaultPreset","hideErrorDialog","a","fetch","context","apiUrl","response","json","data","defaults","find","d","forEach","p","push","target","replacementDefault","thisPreset","payload","method","headers","body","JSON","stringify","filter","unshift","title","my","mb","CardContent","ExpandMore","Add","match","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","aria-label","Close","contextType","RedacticsContext"],"mappings":"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","file":"static/js/8.042b6f40.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar ExpansionPanelContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ExpansionPanelContext.displayName = 'ExpansionPanelContext';\n}\n\nexport default ExpansionPanelContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: '8px 24px 24px'\n  }\n};\nvar ExpansionPanelDetails = React.forwardRef(function ExpansionPanelDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from '../ExpansionPanel/ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 3),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        opacity: 0.38\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar ExpansionPanelSummary = React.forwardRef(function ExpansionPanelSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(ExpansionPanelContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelSummary.propTypes = {\n  /**\n   * The content of the expansion panel summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelSummary'\n})(ExpansionPanelSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar ExpansionPanel = React.forwardRef(function ExpansionPanel(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'ExpansionPanel',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: the ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (!React.isValidElement(summary)) {\n      return new Error('Material-UI: expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import React from 'react';\nimport styled from 'styled-components';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  FormControl as MuiFormControl,\n  Typography,\n  TextField as MuiTextField,\n  Box,\n} from '@material-ui/core';\n\nimport { spacing } from '@material-ui/system';\n\nimport { RedactRuleDefault } from '../../types/redactics';\n\nconst FormControl = styled(MuiFormControl)(spacing);\n\nconst TextFieldSpacing = styled(MuiTextField)(spacing);\n\nconst TextField = styled(TextFieldSpacing)`\n  width: 300px;\n`;\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\ninterface IProps {\n  ruleDefaults: RedactRuleDefault;\n  handleRedactEmailChange: any;\n}\n\ninterface IState {}\n\nclass DefaultRedactEmail extends React.Component<IProps, IState> {\n  /* eslint-disable max-len */\n\n  render() {\n    return (\n      <React.Fragment>\n\n        <Typography variant=\"body1\" gutterBottom>\n          Transform emails to unique email address derived from the row&apos;s primary key, constructed based on provided prefix and domain - i.e. <code>[prefix][primarykey]@[domain]</code>\n        </Typography>\n\n        <form noValidate autoComplete=\"off\">\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              name=\"prefix\"\n              label=\"Prefix\"\n              value={this.props.ruleDefaults.redactData.prefix}\n              onChange={this.props.handleRedactEmailChange}\n            />\n          </FormControl>\n\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              name=\"primaryKey\"\n              label=\"Primary Key\"\n              value={this.props.ruleDefaults.redactData.primaryKey}\n              onChange={this.props.handleRedactEmailChange}\n            />\n          </FormControl>\n\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              name=\"domain\"\n              label=\"Domain\"\n              value={this.props.ruleDefaults.redactData.domain}\n              onChange={this.props.handleRedactEmailChange}\n            />\n          </FormControl>\n\n          <Box mt={4}>\n            <Typography variant=\"body1\" gutterBottom>\n              <b>Sample Output</b>\n            </Typography>\n\n            <Typography variant=\"h6\" gutterBottom>\n              <code>{this.props.ruleDefaults.redactData.prefix}12345@{this.props.ruleDefaults.redactData.domain}</code>\n            </Typography>\n\n          </Box>\n        </form>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DefaultRedactEmail;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  FormControl as MuiFormControl,\n  Typography,\n  TextField as MuiTextField,\n  Box,\n} from '@material-ui/core';\n\nimport { spacing } from '@material-ui/system';\n\nimport { RedactRuleDefault } from '../../types/redactics';\n\nconst FormControl = styled(MuiFormControl)(spacing);\n\nconst TextFieldSpacing = styled(MuiTextField)(spacing);\n\nconst TextField = styled(TextFieldSpacing)`\n  width: 300px;\n`;\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\ninterface IProps {\n  ruleDefaults: RedactRuleDefault;\n  handleReplacementChange: any;\n}\n\ninterface IState {}\n\nclass DefaultReplacement extends React.Component<IProps, IState> {\n  render() {\n    return (\n      <React.Fragment>\n\n        <Typography variant=\"body1\" gutterBottom>\n          Replace data with a provided value\n        </Typography>\n\n        <form noValidate autoComplete=\"off\">\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              name=\"replacement\"\n              label=\"Replacement Text\"\n              value={this.props.ruleDefaults.redactData.replacement}\n              onChange={this.props.handleReplacementChange}\n            />\n          </FormControl>\n\n          <Box mt={4}>\n            <Typography variant=\"body1\" gutterBottom>\n              <b>Sample Output</b>\n            </Typography>\n\n            <Typography variant=\"h6\" gutterBottom>\n              <code>{this.props.ruleDefaults.redactData.replacement}</code>\n            </Typography>\n\n          </Box>\n        </form>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DefaultReplacement;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  FormControl as MuiFormControl,\n  Typography,\n  TextField as MuiTextField,\n  Box,\n} from '@material-ui/core';\n\nimport { spacing } from '@material-ui/system';\n\nimport { RedactRuleDefault } from '../../types/redactics';\n\nconst FormControl = styled(MuiFormControl)(spacing);\n\nconst TextFieldSpacing = styled(MuiTextField)(spacing);\n\nconst TextField = styled(TextFieldSpacing)`\n  width: 300px;\n`;\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\ninterface IProps {\n  ruleDefaults: RedactRuleDefault;\n  handleRandomStringChange: any;\n}\n\ninterface IState {}\n\nclass DefaultRandomString extends React.Component<IProps, IState> {\n  static generateRandom(length:number) {\n    let result = '';\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    for (let i = length; i > 0; i -= 1) result += chars[Math.floor(Math.random() * chars.length)];\n    return result;\n  }\n\n  render() {\n    const chars:number = this.props.ruleDefaults.redactData.chars as number || 24;\n    return (\n      <React.Fragment>\n\n        <Typography variant=\"body1\" gutterBottom>\n          Replace data with a random alphanumeric string of a provided length\n        </Typography>\n\n        <form noValidate autoComplete=\"off\">\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              name=\"randomString\"\n              label=\"Random String Character Length\"\n              value={this.props.ruleDefaults.redactData.chars}\n              type=\"number\"\n              onChange={this.props.handleRandomStringChange}\n            />\n          </FormControl>\n\n          <Box mt={4}>\n            <Typography variant=\"body1\" gutterBottom>\n              <b>Sample Output</b>\n            </Typography>\n\n            <Typography variant=\"h6\" gutterBottom>\n              <code>\n                {DefaultRandomString.generateRandom(chars)}\n              </code>\n            </Typography>\n\n          </Box>\n        </form>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DefaultRandomString;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  FormControl as MuiFormControl,\n  Typography,\n  TextField as MuiTextField,\n} from '@material-ui/core';\n\nimport { spacing } from '@material-ui/system';\n\nimport { RedactRulePreset } from '../../types/redactics';\n\nconst FormControl = styled(MuiFormControl)(spacing);\n\nconst TextFieldSpacing = styled(MuiTextField)(spacing);\n\nconst TextField = styled(TextFieldSpacing)`\n  width: 300px;\n`;\n\ninterface IProps {\n  selectedPreset: RedactRulePreset;\n  handleChange: any;\n}\n\ninterface IState {\n  key: string;\n  prefix: string;\n  domain: string;\n  primaryKey: string;\n}\n\n/* eslint-disable max-len */\n\nclass PresetRedactEmail extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      key: this.props.selectedPreset.key || '',\n      prefix: this.props.selectedPreset.redactData.prefix || 'redacted',\n      domain: this.props.selectedPreset.redactData.domain || 'redactics.com',\n      primaryKey: this.props.selectedPreset.redactData.primaryKey || 'id',\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n        <Typography variant=\"body1\" gutterBottom>\n          Transform emails to unique email address derived from the row&quot;s primary key, constructed based on provided prefix and domain - i.e. <code>[prefix][primarykey]@[domain]</code>\n        </Typography>\n\n        <form noValidate autoComplete=\"off\">\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              onChange={(event) => this.props.handleChange(this.state.key, event)}\n              name=\"prefix\"\n              label=\"Prefix\"\n              defaultValue={this.state.prefix}\n            />\n          </FormControl>\n\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              onChange={(event) => this.props.handleChange(this.state.key, event)}\n              name=\"primaryKey\"\n              label=\"Primary Key\"\n              defaultValue={this.state.primaryKey}\n            />\n          </FormControl>\n\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              onChange={(event) => this.props.handleChange(this.state.key, event)}\n              name=\"domain\"\n              label=\"Domain\"\n              defaultValue={this.state.domain}\n            />\n          </FormControl>\n\n        </form>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PresetRedactEmail;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  FormControl as MuiFormControl,\n  Typography,\n  TextField as MuiTextField,\n} from '@material-ui/core';\n\nimport { spacing } from '@material-ui/system';\n\nimport { RedactRulePreset } from '../../types/redactics';\n\nconst FormControl = styled(MuiFormControl)(spacing);\n\nconst TextFieldSpacing = styled(MuiTextField)(spacing);\n\nconst TextField = styled(TextFieldSpacing)`\n  width: 300px;\n`;\n\ninterface IProps {\n  selectedPreset: RedactRulePreset;\n  handleChange: any;\n}\n\ninterface IState {\n  key: string;\n  replacement: string;\n}\n\nclass PresetReplacement extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      key: this.props.selectedPreset.key || '',\n      replacement: this.props.selectedPreset.redactData.replacement || 'redacted',\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n        <Typography variant=\"body1\" gutterBottom>\n          Replace data with a provided value\n        </Typography>\n\n        <form noValidate autoComplete=\"off\">\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              onChange={(event) => this.props.handleChange(this.state.key, event)}\n              name=\"replacement\"\n              label=\"Replacement Text\"\n              defaultValue={this.state.replacement}\n            />\n          </FormControl>\n        </form>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PresetReplacement;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  FormControl as MuiFormControl,\n  Typography,\n  TextField as MuiTextField,\n} from '@material-ui/core';\n\nimport { spacing } from '@material-ui/system';\n\nimport { RedactRulePreset } from '../../types/redactics';\n\nconst FormControl = styled(MuiFormControl)(spacing);\n\nconst TextFieldSpacing = styled(MuiTextField)(spacing);\n\nconst TextField = styled(TextFieldSpacing)`\n  width: 300px;\n`;\n\ninterface IProps {\n  selectedPreset: RedactRulePreset;\n  handleChange: any;\n}\n\ninterface IState {\n  key: string;\n  chars: number;\n}\n\nclass PresetRandomString extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      key: this.props.selectedPreset.key || '',\n      chars: this.props.selectedPreset.redactData.chars || 24,\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n        <Typography variant=\"body1\" gutterBottom>\n          Replace data with a random alphanumeric string of a provided length\n        </Typography>\n\n         <form noValidate autoComplete=\"off\">\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              onChange={(event) => this.props.handleChange(this.state.key, event)}\n              name=\"chars\"\n              label=\"Random String Character Length\"\n              defaultValue={this.state.chars}\n              type=\"number\"\n            />\n          </FormControl>\n\n        </form>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PresetRandomString;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\n\nimport {\n  FormControl as MuiFormControl,\n  Grid as MuiGrid,\n  TextField as MuiTextField,\n  Button as MuiButton,\n  Box,\n  InputLabel,\n  OutlinedInput,\n  MenuItem,\n  Select as MuiSelect,\n} from '@material-ui/core';\n\nimport {\n  DeleteOutline as DeleteIcon,\n} from '@material-ui/icons';\n\nimport { spacing } from '@material-ui/system';\n\nimport PresetRedactEmail from './PresetRedactEmail';\nimport PresetReplacement from './PresetReplacement';\nimport PresetRandomString from './PresetRandomString';\n\nimport { SettingsRedactRulesets, RedactRulePreset } from '../../types/redactics';\n\nconst FormControl = styled(MuiFormControl)(spacing);\n\nconst Grid = styled(MuiGrid)(spacing);\n\nconst TextFieldSpacing = styled(MuiTextField)(spacing);\n\nconst TextField = styled(TextFieldSpacing)`\n  width: 300px;\n`;\n\nconst Button = styled(MuiButton)(spacing);\n\nconst SelectSpacing = styled(MuiSelect)(spacing);\n\nconst Select = styled(SelectSpacing)`\n  width: 300px;\n`;\n\ninterface IProps {\n  rulesets: SettingsRedactRulesets[];\n  selectedPreset: RedactRulePreset;\n  handlePresetChange: any;\n  deletePreset: any;\n}\n\ninterface IState {\n  ruleLabelWidth: number;\n  rulesets: SettingsRedactRulesets[];\n  preset: RedactRulePreset;\n}\n\nclass Preset extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      ruleLabelWidth: 30,\n      rulesets: this.props.rulesets,\n      preset: this.props.selectedPreset,\n    };\n\n    this.resetPresetName = this.resetPresetName.bind(this);\n  }\n\n  resetPresetName() {\n    const { preset } = this.state;\n    if (preset.presetName === 'New Preset') {\n      preset.presetName = '';\n    }\n\n    this.setState({\n      preset,\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n        <Box mt={6}>\n\n          <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n            <TextField\n              value={this.state.preset.presetName}\n              name=\"presetName\"\n              label=\"Preset Name\"\n              onChange={\n                (event) => this.props.handlePresetChange(this.props.selectedPreset.key, event)\n              }\n              onFocus={this.resetPresetName}\n            />\n          </FormControl>\n\n          <FormControl variant=\"outlined\" margin=\"dense\">\n            <InputLabel>\n              Rule\n            </InputLabel>\n            <Select\n              value={this.state.preset.rule}\n              onChange={\n                (event) => this.props.handlePresetChange(this.props.selectedPreset.key, event)\n              }\n              name=\"rule\"\n              input={\n                <OutlinedInput\n                  labelWidth={this.state.ruleLabelWidth}\n                  name=\"rule\"\n                />\n              }\n            >\n              {this.state.rulesets.map((rule: SettingsRedactRulesets) => (\n                <MenuItem key={rule.redactKey} value={rule.redactKey}>{rule.redactName}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <Box mt={4}>\n            {\n              this.state.preset.rule === 'redact_email' ? <PresetRedactEmail key={this.state.preset.key} handleChange={this.props.handlePresetChange} selectedPreset={this.state.preset} /> : ''\n            }\n            {\n              this.state.preset.rule === 'replacement' ? <PresetReplacement key={this.state.preset.key} handleChange={this.props.handlePresetChange} selectedPreset={this.state.preset} /> : ''\n            }\n            {\n              this.state.preset.rule === 'random_string' ? <PresetRandomString key={this.state.preset.key} handleChange={this.props.handlePresetChange} selectedPreset={this.state.preset} /> : ''\n            }\n          </Box>\n\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            mt={12}\n          >\n            <Grid item xs={10}></Grid>\n            <Grid item>\n                <Button variant=\"contained\" color=\"default\" size=\"small\" onClick={(event) => this.props.deletePreset(this.state.preset, event)}>\n                <DeleteIcon />&nbsp;&nbsp;Delete\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preset;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Helmet from 'react-helmet';\n\n// import { red, green, blue } from \"@material-ui/core/colors\";\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n  Divider as MuiDivider,\n  Grid as MuiGrid,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button as MuiButton,\n  Card as MuiCard,\n  CardContent,\n  Box,\n  Snackbar,\n  IconButton,\n  ExpansionPanel,\n  ExpansionPanelDetails as MuiExpansionPanelDetails,\n  ExpansionPanelSummary,\n} from '@material-ui/core';\n\nimport {\n  Add as AddIcon,\n  Close as CloseIcon,\n  ExpandMore as ExpandMoreIcon,\n} from '@material-ui/icons';\n\nimport {\n  Save as SaveIcon,\n} from 'react-feather';\n\nimport { spacing } from '@material-ui/system';\nimport RedacticsContext from '../../contexts/RedacticsContext';\n\nimport DefaultRedactEmail from './DefaultRedactEmail';\nimport DefaultReplacement from './DefaultReplacement';\nimport DefaultRandomString from './DefaultRandomString';\nimport Preset from './Preset';\n\nimport {\n  RedactRuleSet, RedactRulePreset, RedactRuleConfig,\n  RedactRuleDefault,\n} from '../../types/redactics';\n\nconst Divider = styled(MuiDivider)(spacing);\n\nconst Card = styled(MuiCard)(spacing);\n\nconst Grid = styled(MuiGrid)(spacing);\n\nconst Button = styled(MuiButton)(spacing);\n\nconst ExpansionPanelDetails = withStyles({\n  root: {\n    display: 'block',\n  },\n})(MuiExpansionPanelDetails);\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\ninterface IProps {}\n\ninterface IState {\n  uniquePresetKey: number;\n  incompletePreset: boolean;\n  redactEmailDefault: RedactRuleDefault;\n  redactReplacementDefault: RedactRuleDefault;\n  redactRandomStringDefault: RedactRuleDefault;\n  rulesets: RedactRuleSet[];\n  presets: RedactRulePreset[];\n  errors: any;\n  isOwner: boolean;\n  selectedPreset?: RedactRulePreset;\n  saveDefaultRulesButtonDisabled: boolean;\n  saveCustomPresetButtonDisabled: boolean;\n  helmReminderCheckbox: boolean;\n  ackHelmReminder: boolean;\n  showSnackbar: boolean;\n}\n\nclass Settings extends React.Component<IProps, IState> {\n  static contextType = RedacticsContext;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      uniquePresetKey: 0,\n      incompletePreset: false,\n      rulesets: [],\n      presets: [],\n      errors: [],\n      isOwner: false,\n      saveDefaultRulesButtonDisabled: false,\n      saveCustomPresetButtonDisabled: false,\n      helmReminderCheckbox: false,\n      ackHelmReminder: false,\n      showSnackbar: false,\n      redactEmailDefault: {\n        redactData: {\n          prefix: 'redacted',\n          primaryKey: 'id',\n          domain: 'redactics.com',\n        },\n        uuid: '',\n      },\n      redactReplacementDefault: {\n        redactData: {\n          replacement: 'redacted',\n        },\n        uuid: '',\n      },\n      redactRandomStringDefault: {\n        redactData: {\n          chars: 24,\n        },\n        uuid: '',\n      },\n    };\n\n    this.refreshSettings = this.refreshSettings.bind(this);\n    this.addPreset = this.addPreset.bind(this);\n    this.saveDefaultRules = this.saveDefaultRules.bind(this);\n    this.handleRedactEmailChange = this.handleRedactEmailChange.bind(this);\n    this.handleReplacementChange = this.handleReplacementChange.bind(this);\n    this.handleRandomStringChange = this.handleRandomStringChange.bind(this);\n    this.handlePresetSave = this.handlePresetSave.bind(this);\n    this.handlePresetDelete = this.handlePresetDelete.bind(this);\n    this.handlePresetChange = this.handlePresetChange.bind(this);\n    this.toggleExpandPanel = this.toggleExpandPanel.bind(this);\n    this.validatePreset = this.validatePreset.bind(this);\n    this.validateDefaultPreset = this.validateDefaultPreset.bind(this);\n    this.hideErrorDialog = this.hideErrorDialog.bind(this);\n  }\n\n  async refreshSettings() {\n    try {\n      const response = await fetch(`${this.context.apiUrl}/settings`);\n\n      const data = await response.json();\n\n      const redactEmailDefault = data.defaults.find((d:RedactRuleSet) => d.rule === 'redact_email');\n      const redactReplacementDefault = data.defaults.find((d:RedactRuleSet) => d.rule === 'replacement');\n      const redactRandomStringDefault = data.defaults.find((d:RedactRuleSet) => d.rule === 'random_string');\n\n      // assign keys to presets\n      const presets:RedactRulePreset[] = [];\n      data.presets.forEach((p:RedactRulePreset) => {\n        presets.push({\n          presetName: p.presetName,\n          rule: p.rule,\n          redactData: p.redactData,\n          key: p.uuid,\n          uuid: p.uuid,\n        });\n      });\n\n      this.setState({\n        redactEmailDefault,\n        redactReplacementDefault,\n        redactRandomStringDefault,\n        rulesets: data.rulesets,\n        presets,\n        isOwner: data.isOwner,\n      });\n    } catch (err) {\n      // console.log('CATCH ERR', error);\n    }\n  }\n\n  componentDidMount() {\n    // copy context data into component state\n    this.setState({\n      ackHelmReminder: this.context.ackHelmReminder,\n    });\n\n    this.refreshSettings();\n  }\n\n  handleRedactEmailChange(event:any) {\n    const { redactEmailDefault } = this.state;\n    if (redactEmailDefault && redactEmailDefault.redactData) {\n      redactEmailDefault.redactData[\n        event.target.name as keyof RedactRuleConfig\n      ] = event.target.value;\n      this.setState({\n        redactEmailDefault,\n      });\n    }\n  }\n\n  handleReplacementChange(event:any) {\n    const replacementDefault = this.state.redactReplacementDefault;\n    if (replacementDefault && replacementDefault.redactData) {\n      replacementDefault.redactData.replacement = event.target.value;\n      this.setState({\n        redactReplacementDefault: replacementDefault,\n      });\n    }\n  }\n\n  handleRandomStringChange(event:any) {\n    const { redactRandomStringDefault } = this.state;\n    if (redactRandomStringDefault && redactRandomStringDefault.redactData) {\n      redactRandomStringDefault.redactData.chars = event.target.value;\n      this.setState({\n        redactRandomStringDefault,\n      });\n    }\n  }\n\n  handlePresetChange(key: string, event: any) {\n    const { presets } = this.state;\n\n    presets.map((preset:RedactRulePreset) => {\n      const thisPreset = preset;\n      if (thisPreset.key === key && event.target.name === 'rule') {\n        // reset to defaults\n        switch (event.target.value) {\n          case 'redact_email':\n            thisPreset.rule = 'redact_email';\n            thisPreset.redactData = {\n              prefix: 'redacted',\n              primaryKey: 'id',\n              domain: 'redacted.com',\n            };\n            break;\n\n          case 'replacement':\n            thisPreset.rule = 'replacement';\n            thisPreset.redactData = {\n              replacement: 'redacted',\n            };\n            break;\n\n          case 'random_string':\n            thisPreset.rule = 'random_string';\n            thisPreset.redactData = {\n              chars: 24,\n            };\n            break;\n\n          default:\n        }\n      }\n\n      switch (event.target.name) {\n        case 'prefix':\n        case 'primaryKey':\n        case 'domain':\n        case 'replacement':\n        case 'chars':\n          thisPreset.redactData[event.target.name as keyof RedactRuleConfig] = event.target.value;\n          break;\n\n        case 'presetName':\n          thisPreset.presetName = event.target.value;\n          break;\n\n        default:\n          break;\n      }\n\n      return thisPreset;\n    });\n\n    this.setState({\n      presets,\n    });\n  }\n\n  validateDefaultPreset(payload:any) {\n    let incompletePreset = false;\n    if (!payload[0].redactData.prefix || !payload[0].redactData.primaryKey\n      || !payload[0].redactData.domain) {\n      incompletePreset = true;\n    } else if (!payload[1].redactData.replacement) {\n      incompletePreset = true;\n    } else if (!payload[2].redactData.chars) {\n      incompletePreset = true;\n    }\n    this.setState({\n      incompletePreset,\n    });\n    return !(incompletePreset);\n  }\n\n  validatePreset() {\n    let incompletePreset = false;\n    this.state.presets.forEach((p:RedactRulePreset) => {\n      if (!p.presetName || !p.rule) {\n        incompletePreset = true;\n      } else if (p.rule === 'redact_email' && (!p.redactData.prefix || !p.redactData.primaryKey || !p.redactData.domain)) {\n        incompletePreset = true;\n      } else if (p.rule === 'replacement' && !p.redactData.replacement) {\n        incompletePreset = true;\n      } else if (p.rule === 'random_string' && !p.redactData.chars) {\n        incompletePreset = true;\n      }\n    });\n    this.setState({\n      incompletePreset,\n    });\n    return !(incompletePreset);\n  }\n\n  hideErrorDialog() {\n    this.setState({\n      incompletePreset: false,\n    });\n  }\n\n  async handlePresetSave() {\n    if (this.validatePreset()) {\n      this.setState({\n        saveCustomPresetButtonDisabled: true,\n      });\n\n      try {\n        await fetch(`${this.context.apiUrl}/settings/presets`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(this.state.presets),\n        });\n\n        // update all UUIDs tracked to state\n        this.refreshSettings();\n\n        // close all expansion panels\n        const presets = this.state.presets.map((p:RedactRulePreset) => {\n          const thisPreset = p;\n          thisPreset.expanded = false;\n          return thisPreset;\n        });\n\n        this.setState({\n          showSnackbar: true,\n          saveCustomPresetButtonDisabled: false,\n          presets,\n        });\n      } catch (err) {\n        this.setState({\n          saveCustomPresetButtonDisabled: false,\n        });\n      }\n    } else {\n      this.setState({\n        saveCustomPresetButtonDisabled: false,\n      });\n    }\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({ showSnackbar: false });\n  };\n\n  handlePresetDelete(preset:RedactRulePreset) {\n    const uniquePresetKey = this.state.uniquePresetKey + 1; // random array idx value\n\n    const presets = this.state.presets.filter((p:RedactRulePreset) => {\n      const thisPreset = p;\n      if (thisPreset.key === preset.key) {\n        // mark for deletion\n        thisPreset.key = `delete${uniquePresetKey}`;\n      }\n\n      return thisPreset;\n    });\n\n    this.setState({\n      presets,\n    });\n  }\n\n  addPreset() {\n    const { presets } = this.state;\n    const uniquePresetKey = this.state.uniquePresetKey + 1; // random array idx value\n\n    presets.unshift({\n      presetName: 'New Preset',\n      rule: '',\n      redactData: {},\n      key: `new${uniquePresetKey}`,\n      expanded: true,\n    });\n\n    this.setState({\n      presets,\n      uniquePresetKey,\n    });\n  }\n\n  async saveDefaultRules() {\n    this.setState({\n      saveDefaultRulesButtonDisabled: true,\n    });\n    const payload:any = [];\n    if (this.state.redactEmailDefault) {\n      payload.push({\n        uuid: this.state.redactEmailDefault.uuid,\n        redactData: this.state.redactEmailDefault.redactData,\n      });\n    }\n    if (this.state.redactReplacementDefault) {\n      payload.push({\n        uuid: this.state.redactReplacementDefault.uuid,\n        redactData: this.state.redactReplacementDefault.redactData,\n      });\n    }\n    if (this.state.redactRandomStringDefault) {\n      payload.push({\n        uuid: this.state.redactRandomStringDefault.uuid,\n        redactData: this.state.redactRandomStringDefault.redactData,\n      });\n    }\n\n    if (this.validateDefaultPreset(payload)) {\n      try {\n        await fetch(`${this.context.apiUrl}/settings/saveRuleDefaults`, {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        });\n\n        this.setState({\n          showSnackbar: true,\n          saveDefaultRulesButtonDisabled: false,\n        });\n      } catch (err) {\n        // console.log('ERR', error);\n      }\n    } else {\n      this.setState({\n        saveDefaultRulesButtonDisabled: false,\n      });\n    }\n  }\n\n  toggleExpandPanel(event: any, preset:RedactRulePreset) {\n    const presets = this.state.presets.map((p:RedactRulePreset) => {\n      const thisPreset = p;\n      if (thisPreset.key === preset.key) {\n        thisPreset.expanded = !thisPreset.expanded;\n      }\n\n      return thisPreset;\n    });\n\n    this.setState({\n      presets,\n    });\n  }\n\n  /* eslint-disable max-len */\n\n  render() {\n    return (\n      <React.Fragment>\n        <Helmet title=\"Settings\" />\n\n        <Typography variant=\"h1\" gutterBottom display=\"inline\">\n          Settings\n        </Typography>\n\n        <Divider my={6} />\n\n        <Card mb={6}>\n          <CardContent>\n            <Typography variant=\"h4\" gutterBottom>\n              Default Redaction Rule Settings\n            </Typography>\n\n            <Box mt={4}>\n              <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography variant=\"h6\">Redact Email</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  {\n                    this.state.redactEmailDefault ? <DefaultRedactEmail ruleDefaults={this.state.redactEmailDefault} handleRedactEmailChange={this.handleRedactEmailChange} /> : ''\n                  }\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n              <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography variant=\"h6\">Replacement</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  {\n                    this.state.redactReplacementDefault ? <DefaultReplacement ruleDefaults={this.state.redactReplacementDefault} handleReplacementChange={this.handleReplacementChange} /> : ''\n                  }\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n              <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography variant=\"h6\">Random String</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  {\n                    this.state.redactRandomStringDefault ? <DefaultRandomString ruleDefaults={this.state.redactRandomStringDefault} handleRandomStringChange={this.handleRandomStringChange} /> : ''\n                  }\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            </Box>\n\n            <Button variant=\"contained\" disabled={this.state.saveDefaultRulesButtonDisabled} color=\"primary\" size=\"large\" mt={8} onClick={this.saveDefaultRules}>\n              <SaveIcon />&nbsp;Save Changes\n            </Button>\n\n          </CardContent>\n        </Card>\n\n        <Grid\n          justify=\"flex-end\"\n          container\n          spacing={10}\n          mt={10}\n        >\n\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.addPreset}>\n              <AddIcon />&nbsp;\n              Add Preset\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Card mb={6} mt={2}>\n          <CardContent>\n\n            <Typography variant=\"h4\" gutterBottom>\n              Custom Redaction Rule Presets\n            </Typography>\n\n            <Box width={1 / 2} mt={8}>\n              <Typography variant=\"body1\" gutterBottom>\n                Redaction rule presets allow you to create reusable settings that can be set on your database fields while eliminating a lot of extra input. Simply define your preset here and it will appear as a redaction rule option in the Databases section of this app.\n              </Typography>\n            </Box>\n\n            <Box mt={4}>\n              {this.state.presets.map((preset: RedactRulePreset) => {\n                if (preset.key && !preset.key.match(/^delete/)) {\n                  return (\n                    <ExpansionPanel\n                      expanded={preset.expanded}\n                      onChange={(event) => this.toggleExpandPanel(event, preset)}\n                      key={preset.key}\n                    >\n                      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography variant=\"h6\">{preset.presetName}</Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <Preset key={preset.key} rulesets={this.state.rulesets} selectedPreset={preset} handlePresetChange={this.handlePresetChange} deletePreset={this.handlePresetDelete} />\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                  );\n                }\n\n                return null;\n              })}\n            </Box>\n\n            <Box mt={8}>\n              <Button variant=\"contained\" color=\"primary\" size=\"large\" disabled={this.state.saveCustomPresetButtonDisabled} onClick={this.handlePresetSave}>\n                <SaveIcon />&nbsp;Save Changes\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n\n        <Dialog\n          open={this.state.incompletePreset}\n          aria-labelledby=\"dialog-title\"\n          aria-describedby=\"dialog-description\"\n        >\n          <DialogTitle id=\"dialog-title\">Error</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"dialog-description\">\n              One or more of your preset rules contains a blank value\n            </DialogContentText>\n\n            <DialogActions>\n              <Button color=\"primary\" onClick={this.hideErrorDialog}>\n                Okay\n              </Button>\n            </DialogActions>\n          </DialogContent>\n        </Dialog>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={this.state.showSnackbar}\n          autoHideDuration={8000}\n          onClose={this.handleSnackbarClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\"><b>Your changes have been saved!</b></span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleSnackbarClose}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Settings;\n"],"sourceRoot":""}